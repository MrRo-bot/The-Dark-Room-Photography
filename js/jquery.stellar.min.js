!(function (u, a, b, v) {
  function p(a, b) {
    (this.element = a),
      (this.options = u.extend({}, e, b)),
      (this._defaults = e),
      (this._name = d),
      this.init();
  }
  var d = "stellar",
    e = {
      scrollProperty: "scroll",
      positionProperty: "position",
      horizontalScrolling: !0,
      verticalScrolling: !0,
      horizontalOffset: 0,
      verticalOffset: 0,
      responsive: !1,
      parallaxBackgrounds: !0,
      parallaxElements: !0,
      hideDistantElements: !0,
      hideElement: function (b) {
        b.hide();
      },
      showElement: function (b) {
        b.show();
      },
    },
    g = {
      scroll: {
        getLeft: function (b) {
          return b.scrollLeft();
        },
        setLeft: function (c, a) {
          c.scrollLeft(a);
        },
        getTop: function (b) {
          return b.scrollTop();
        },
        setTop: function (c, a) {
          c.scrollTop(a);
        },
      },
      position: {
        getLeft: function (b) {
          return -1 * parseInt(b.css("left"), 10);
        },
        getTop: function (b) {
          return -1 * parseInt(b.css("top"), 10);
        },
      },
      margin: {
        getLeft: function (b) {
          return -1 * parseInt(b.css("margin-left"), 10);
        },
        getTop: function (b) {
          return -1 * parseInt(b.css("margin-top"), 10);
        },
      },
      transform: {
        getLeft: function (c) {
          var a = getComputedStyle(c[0])[f];
          return "none" === a
            ? 0
            : -1 * parseInt(a.match(/(-?[0-9]+)/g)[4], 10);
        },
        getTop: function (c) {
          var a = getComputedStyle(c[0])[f];
          return "none" === a
            ? 0
            : -1 * parseInt(a.match(/(-?[0-9]+)/g)[5], 10);
        },
      },
    },
    h = {
      position: {
        setLeft: function (c, a) {
          c.css("left", a);
        },
        setTop: function (c, a) {
          c.css("top", a);
        },
      },
      transform: {
        setPosition: function (g, a, b, c, d) {
          g[0].style[f] =
            "translate3d(" + (a - b) + "px, " + (c - d) + "px, 0)";
        },
      },
    },
    c = (function () {
      var a,
        f = /^(Moz|Webkit|Khtml|O|ms|Icab)(?=[A-Z])/,
        c = u("script")[0].style,
        d = "";
      for (a in c)
        if (f.test(a)) {
          d = a.match(f)[0];
          break;
        }
      return (
        "WebkitOpacity" in c && (d = "Webkit"),
        "KhtmlOpacity" in c && (d = "Khtml"),
        function (b) {
          return (
            d + (0 < d.length ? b.charAt(0).toUpperCase() + b.slice(1) : b)
          );
        }
      );
    })(),
    f = c("transform"),
    i =
      u("<div />", {
        style: "background:#fff",
      }).css("background-position-x") !== v,
    w = i
      ? function (d, a, b) {
          d.css({
            "background-position-x": a,
            "background-position-y": b,
          });
        }
      : function (d, a, b) {
          d.css("background-position", a + " " + b);
        },
    m = i
      ? function (b) {
          return [
            b.css("background-position-x"),
            b.css("background-position-y"),
          ];
        }
      : function (b) {
          return b.css("background-position").split(" ");
        },
    j =
      a.requestAnimationFrame ||
      a.webkitRequestAnimationFrame ||
      a.mozRequestAnimationFrame ||
      a.oRequestAnimationFrame ||
      a.msRequestAnimationFrame ||
      function (b) {
        setTimeout(b, 1e3 / 60);
      };
  (p.prototype = {
    init: function () {
      (this.options.name = "stellar_" + Math.floor(1e9 * Math.random())),
        this._defineElements(),
        this._defineGetters(),
        this._defineSetters(),
        this._handleWindowLoadAndResize(),
        this._detectViewport(),
        this.refresh({
          firstLoad: !0,
        }),
        "scroll" === this.options.scrollProperty
          ? this._handleScrollEvent()
          : this._startAnimationLoop();
    },
    _defineElements: function () {
      this.element === b.body && (this.element = a),
        (this.$scrollElement = u(this.element)),
        (this.$element = this.element === a ? u("body") : this.$scrollElement),
        (this.$viewportElement =
          this.options.viewportElement === v
            ? this.$scrollElement[0] === a ||
              "scroll" === this.options.scrollProperty
              ? this.$scrollElement
              : this.$scrollElement.parent()
            : u(this.options.viewportElement));
    },
    _defineGetters: function () {
      var c = this,
        a = g[c.options.scrollProperty];
      (this._getScrollLeft = function () {
        return a.getLeft(c.$scrollElement);
      }),
        (this._getScrollTop = function () {
          return a.getTop(c.$scrollElement);
        });
    },
    _defineSetters: function () {
      var i = this,
        a = g[i.options.scrollProperty],
        b = h[i.options.positionProperty],
        c = a.setLeft,
        d = a.setTop;
      (this._setScrollLeft =
        "function" == typeof c
          ? function (b) {
              c(i.$scrollElement, b);
            }
          : u.noop),
        (this._setScrollTop =
          "function" == typeof d
            ? function (b) {
                d(i.$scrollElement, b);
              }
            : u.noop),
        (this._setPosition =
          b.setPosition ||
          function (d, a, c, e, f) {
            i.options.horizontalScrolling && b.setLeft(d, a, c),
              i.options.verticalScrolling && b.setTop(d, e, f);
          });
    },
    _handleWindowLoadAndResize: function () {
      var b = this,
        c = u(a);
      b.options.responsive &&
        c.bind("load." + this.name, function () {
          b.refresh();
        }),
        c.bind("resize." + this.name, function () {
          b._detectViewport(), b.options.responsive && b.refresh();
        });
    },
    refresh: function (b) {
      var c = this,
        d = c._getScrollLeft(),
        e = c._getScrollTop();
      (b && b.firstLoad) || this._reset(),
        this._setScrollLeft(0),
        this._setScrollTop(0),
        this._setOffsets(),
        this._findParticles(),
        this._findBackgrounds(),
        b &&
          b.firstLoad &&
          /WebKit/.test(navigator.userAgent) &&
          u(a).load(function () {
            var d = c._getScrollLeft(),
              a = c._getScrollTop();
            c._setScrollLeft(d + 1),
              c._setScrollTop(a + 1),
              c._setScrollLeft(d),
              c._setScrollTop(a);
          }),
        this._setScrollLeft(d),
        this._setScrollTop(e);
    },
    _detectViewport: function () {
      var c = this.$viewportElement.offset(),
        a = null !== c && c !== v;
      (this.viewportWidth = this.$viewportElement.width()),
        (this.viewportHeight = this.$viewportElement.height()),
        (this.viewportOffsetTop = a ? c.top : 0),
        (this.viewportOffsetLeft = a ? c.left : 0);
    },
    _findParticles: function () {
      {
        var a = this;
        this._getScrollLeft(), this._getScrollTop();
      }
      if (this.particles !== v)
        for (var b = this.particles.length - 1; 0 <= b; b--)
          this.particles[b].$element.data("stellar-elementIsActive", v);
      (this.particles = []),
        this.options.parallaxElements &&
          this.$element.find("[data-stellar-ratio]").each(function () {
            var b,
              d,
              r,
              s,
              t,
              w,
              x,
              y,
              z,
              A = u(this),
              m = 0,
              B = 0,
              C = 0,
              D = 0;
            if (!A.data("stellar-elementIsActive"))
              A.data("stellar-elementIsActive", this);
            else if (A.data("stellar-elementIsActive") !== this) return;
            a.options.showElement(A),
              A.data("stellar-startingLeft")
                ? (A.css("left", A.data("stellar-startingLeft")),
                  A.css("top", A.data("stellar-startingTop")))
                : (A.data("stellar-startingLeft", A.css("left")),
                  A.data("stellar-startingTop", A.css("top"))),
              (r = A.position().left),
              (s = A.position().top),
              (t =
                "auto" === A.css("margin-left")
                  ? 0
                  : parseInt(A.css("margin-left"), 10)),
              (w =
                "auto" === A.css("margin-top")
                  ? 0
                  : parseInt(A.css("margin-top"), 10)),
              (y = A.offset().left - t),
              (z = A.offset().top - w),
              A.parents().each(function () {
                var a = u(this);
                return !0 === a.data("stellar-offset-parent")
                  ? ((m = C), (B = D), (x = a), !1)
                  : ((C += a.position().left), void (D += a.position().top));
              }),
              (b =
                A.data("stellar-horizontal-offset") === v
                  ? x !== v && x.data("stellar-horizontal-offset") !== v
                    ? x.data("stellar-horizontal-offset")
                    : a.horizontalOffset
                  : A.data("stellar-horizontal-offset")),
              (d =
                A.data("stellar-vertical-offset") === v
                  ? x !== v && x.data("stellar-vertical-offset") !== v
                    ? x.data("stellar-vertical-offset")
                    : a.verticalOffset
                  : A.data("stellar-vertical-offset")),
              a.particles.push({
                $element: A,
                $offsetParent: x,
                isFixed: "fixed" === A.css("position"),
                horizontalOffset: b,
                verticalOffset: d,
                startingPositionLeft: r,
                startingPositionTop: s,
                startingOffsetLeft: y,
                startingOffsetTop: z,
                parentOffsetLeft: m,
                parentOffsetTop: B,
                stellarRatio:
                  A.data("stellar-ratio") === v ? 1 : A.data("stellar-ratio"),
                width: A.outerWidth(!0),
                height: A.outerHeight(!0),
                isHidden: !1,
              });
          });
    },
    _findBackgrounds: function () {
      var a,
        d = this,
        c = this._getScrollLeft(),
        e = this._getScrollTop();
      (this.backgrounds = []),
        this.options.parallaxBackgrounds &&
          ((a = this.$element.find("[data-stellar-background-ratio]")),
          this.$element.data("stellar-background-ratio") &&
            (a = a.add(this.$element)),
          a.each(function () {
            var a,
              f,
              n,
              x,
              y,
              z,
              A,
              B = u(this),
              o = m(B),
              p = 0,
              C = 0,
              D = 0,
              E = 0;
            if (!B.data("stellar-backgroundIsActive"))
              B.data("stellar-backgroundIsActive", this);
            else if (B.data("stellar-backgroundIsActive") !== this) return;
            B.data("stellar-backgroundStartingLeft")
              ? w(
                  B,
                  B.data("stellar-backgroundStartingLeft"),
                  B.data("stellar-backgroundStartingTop")
                )
              : (B.data("stellar-backgroundStartingLeft", o[0]),
                B.data("stellar-backgroundStartingTop", o[1])),
              (n =
                "auto" === B.css("margin-left")
                  ? 0
                  : parseInt(B.css("margin-left"), 10)),
              (x =
                "auto" === B.css("margin-top")
                  ? 0
                  : parseInt(B.css("margin-top"), 10)),
              (y = B.offset().left - n - c),
              (z = B.offset().top - x - e),
              B.parents().each(function () {
                var a = u(this);
                return !0 === a.data("stellar-offset-parent")
                  ? ((p = D), (C = E), (A = a), !1)
                  : ((D += a.position().left), void (E += a.position().top));
              }),
              (a =
                B.data("stellar-horizontal-offset") === v
                  ? A !== v && A.data("stellar-horizontal-offset") !== v
                    ? A.data("stellar-horizontal-offset")
                    : d.horizontalOffset
                  : B.data("stellar-horizontal-offset")),
              (f =
                B.data("stellar-vertical-offset") === v
                  ? A !== v && A.data("stellar-vertical-offset") !== v
                    ? A.data("stellar-vertical-offset")
                    : d.verticalOffset
                  : B.data("stellar-vertical-offset")),
              d.backgrounds.push({
                $element: B,
                $offsetParent: A,
                isFixed: "fixed" === B.css("background-attachment"),
                horizontalOffset: a,
                verticalOffset: f,
                startingValueLeft: o[0],
                startingValueTop: o[1],
                startingBackgroundPositionLeft: isNaN(parseInt(o[0], 10))
                  ? 0
                  : parseInt(o[0], 10),
                startingBackgroundPositionTop: isNaN(parseInt(o[1], 10))
                  ? 0
                  : parseInt(o[1], 10),
                startingPositionLeft: B.position().left,
                startingPositionTop: B.position().top,
                startingOffsetLeft: y,
                startingOffsetTop: z,
                parentOffsetLeft: p,
                parentOffsetTop: C,
                stellarRatio:
                  B.data("stellar-background-ratio") === v
                    ? 1
                    : B.data("stellar-background-ratio"),
              });
          }));
    },
    _reset: function () {
      var f, g, h, i, j;
      for (j = this.particles.length - 1; 0 <= j; j--)
        (f = this.particles[j]),
          (g = f.$element.data("stellar-startingLeft")),
          (h = f.$element.data("stellar-startingTop")),
          this._setPosition(f.$element, g, g, h, h),
          this.options.showElement(f.$element),
          f.$element
            .data("stellar-startingLeft", null)
            .data("stellar-elementIsActive", null)
            .data("stellar-backgroundIsActive", null);
      for (j = this.backgrounds.length - 1; 0 <= j; j--)
        (i = this.backgrounds[j]),
          i.$element
            .data("stellar-backgroundStartingLeft", null)
            .data("stellar-backgroundStartingTop", null),
          w(i.$element, i.startingValueLeft, i.startingValueTop);
    },
    destroy: function () {
      this._reset(),
        this.$scrollElement
          .unbind("resize." + this.name)
          .unbind("scroll." + this.name),
        (this._animationLoop = u.noop),
        u(a)
          .unbind("load." + this.name)
          .unbind("resize." + this.name);
    },
    _setOffsets: function () {
      var b = this,
        c = u(a);
      c
        .unbind("resize.horizontal-" + this.name)
        .unbind("resize.vertical-" + this.name),
        "function" == typeof this.options.horizontalOffset
          ? ((this.horizontalOffset = this.options.horizontalOffset()),
            c.bind("resize.horizontal-" + this.name, function () {
              b.horizontalOffset = b.options.horizontalOffset();
            }))
          : (this.horizontalOffset = this.options.horizontalOffset),
        "function" == typeof this.options.verticalOffset
          ? ((this.verticalOffset = this.options.verticalOffset()),
            c.bind("resize.vertical-" + this.name, function () {
              b.verticalOffset = b.options.verticalOffset();
            }))
          : (this.verticalOffset = this.options.verticalOffset);
    },
    _repositionElements: function () {
      var m,
        p,
        q,
        r,
        s,
        t,
        u,
        v,
        x,
        y,
        z = this._getScrollLeft(),
        k = this._getScrollTop(),
        l = !0,
        A = !0;
      if (
        this.currentScrollLeft !== z ||
        this.currentScrollTop !== k ||
        this.currentWidth !== this.viewportWidth ||
        this.currentHeight !== this.viewportHeight
      ) {
        for (
          this.currentScrollLeft = z,
            this.currentScrollTop = k,
            this.currentWidth = this.viewportWidth,
            this.currentHeight = this.viewportHeight,
            y = this.particles.length - 1;
          0 <= y;
          y--
        )
          (m = this.particles[y]),
            (p = m.isFixed ? 1 : 0),
            this.options.horizontalScrolling
              ? ((t =
                  (z +
                    m.horizontalOffset +
                    this.viewportOffsetLeft +
                    m.startingPositionLeft -
                    m.startingOffsetLeft +
                    m.parentOffsetLeft) *
                    -(m.stellarRatio + p - 1) +
                  m.startingPositionLeft),
                (v = t - m.startingPositionLeft + m.startingOffsetLeft))
              : ((t = m.startingPositionLeft), (v = m.startingOffsetLeft)),
            this.options.verticalScrolling
              ? ((u =
                  (k +
                    m.verticalOffset +
                    this.viewportOffsetTop +
                    m.startingPositionTop -
                    m.startingOffsetTop +
                    m.parentOffsetTop) *
                    -(m.stellarRatio + p - 1) +
                  m.startingPositionTop),
                (x = u - m.startingPositionTop + m.startingOffsetTop))
              : ((u = m.startingPositionTop), (x = m.startingOffsetTop)),
            this.options.hideDistantElements &&
              ((A =
                !this.options.horizontalScrolling ||
                (v + m.width > (m.isFixed ? 0 : z) &&
                  v <
                    (m.isFixed ? 0 : z) +
                      this.viewportWidth +
                      this.viewportOffsetLeft)),
              (l =
                !this.options.verticalScrolling ||
                (x + m.height > (m.isFixed ? 0 : k) &&
                  x <
                    (m.isFixed ? 0 : k) +
                      this.viewportHeight +
                      this.viewportOffsetTop))),
            A && l
              ? (m.isHidden &&
                  (this.options.showElement(m.$element), (m.isHidden = !1)),
                this._setPosition(
                  m.$element,
                  t,
                  m.startingPositionLeft,
                  u,
                  m.startingPositionTop
                ))
              : m.isHidden ||
                (this.options.hideElement(m.$element), (m.isHidden = !0));
        for (y = this.backgrounds.length - 1; 0 <= y; y--)
          (q = this.backgrounds[y]),
            (p = q.isFixed ? 0 : 1),
            (r = this.options.horizontalScrolling
              ? (z +
                  q.horizontalOffset -
                  this.viewportOffsetLeft -
                  q.startingOffsetLeft +
                  q.parentOffsetLeft -
                  q.startingBackgroundPositionLeft) *
                  (p - q.stellarRatio) +
                "px"
              : q.startingValueLeft),
            (s = this.options.verticalScrolling
              ? (k +
                  q.verticalOffset -
                  this.viewportOffsetTop -
                  q.startingOffsetTop +
                  q.parentOffsetTop -
                  q.startingBackgroundPositionTop) *
                  (p - q.stellarRatio) +
                "px"
              : q.startingValueTop),
            w(q.$element, r, s);
      }
    },
    _handleScrollEvent: function () {
      var e = this,
        a = !1,
        f = function () {
          e._repositionElements(), (a = !1);
        },
        c = function () {
          a || (j(f), (a = !0));
        };
      this.$scrollElement.bind("scroll." + this.name, c), c();
    },
    _startAnimationLoop: function () {
      var b = this;
      (this._animationLoop = function () {
        j(b._animationLoop), b._repositionElements();
      }),
        this._animationLoop();
    },
  }),
    (u.fn.stellar = function (a) {
      var b = arguments;
      return a === v || "object" == typeof a
        ? this.each(function () {
            u.data(this, "plugin_stellar") ||
              u.data(this, "plugin_stellar", new p(this, a));
          })
        : "string" == typeof a && "_" !== a[0] && "init" !== a
        ? this.each(function () {
            var c = u.data(this, "plugin_stellar");
            c instanceof p &&
              "function" == typeof c[a] &&
              c[a].apply(c, Array.prototype.slice.call(b, 1)),
              "destroy" == a && u.data(this, "plugin_stellar", null);
          })
        : void 0;
    }),
    (u.stellar = function () {
      var b = u(a);
      return b.stellar.apply(b, Array.prototype.slice.call(arguments, 0));
    }),
    (u.stellar.scrollProperty = g),
    (u.stellar.positionProperty = h),
    (a.Stellar = p);
})(jQuery, this, document);

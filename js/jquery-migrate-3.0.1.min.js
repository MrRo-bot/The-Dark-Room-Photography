void 0 === jQuery.migrateMute && (jQuery.migrateMute = !0),
  (function (a) {
    "function" == typeof define && define.amd
      ? define(["jquery"], window, a)
      : "object" == typeof module && module.exports
      ? (module.exports = a(require("jquery"), window))
      : a(jQuery, window);
  })(function (c, l) {
    "use strict";

    function m(b) {
      var d = l.console;
      a[b] ||
        ((a[b] = !0),
        c.migrateWarnings.push(b),
        d &&
          d.warn &&
          !c.migrateMute &&
          (d.warn("JQMIGRATE: " + b), c.migrateTrace && d.trace && d.trace()));
    }

    function e(b, c, d, f) {
      Object.defineProperty(b, c, {
        configurable: !0,
        enumerable: !0,
        get: function () {
          return m(f), d;
        },
        set: function (a) {
          m(f), (d = a);
        },
      });
    }

    function n(b, c, d, e) {
      b[c] = function () {
        return m(e), d.apply(this, arguments);
      };
    }
    (c.migrateVersion = "3.0.1"),
      (function () {
        l.console &&
          l.console.log &&
          ((c && !/^[12]\./.test(c.fn.jquery)) ||
            l.console.log("JQMIGRATE: jQuery 3.0.0+ REQUIRED"),
          c.migrateWarnings &&
            l.console.log("JQMIGRATE: Migrate plugin loaded multiple times"),
          l.console.log(
            "JQMIGRATE: Migrate is installed" +
              (c.migrateMute ? "" : " with logging active") +
              ", version " +
              c.migrateVersion
          ));
      })();
    var a = {};
    (c.migrateWarnings = []),
      void 0 === c.migrateTrace && (c.migrateTrace = !0),
      (c.migrateReset = function () {
        (a = {}), (c.migrateWarnings.length = 0);
      }),
      "BackCompat" === l.document.compatMode &&
        m("jQuery is not compatible with Quirks Mode");
    var r = c.fn.init,
      i = c.isNumeric,
      s = c.find;
    (c.fn.init = function (a) {
      var b = Array.prototype.slice.call(arguments);
      return (
        "string" == typeof a &&
          "#" === a &&
          (m("jQuery( '#' ) is not a valid selector"), (b[0] = [])),
        r.apply(this, b)
      );
    }),
      (c.fn.init.prototype = c.fn),
      (c.find = function (b) {
        var a = Array.prototype.slice.call(arguments);
        if (
          "string" == typeof b &&
          /\[(\s*[-\w]+\s*)([~|^$*]?=)\s*([-\w#]*?#[-\w#]*)\s*\]/.test(b)
        )
          try {
            l.document.querySelector(b);
          } catch (c) {
            b = b.replace(
              /\[(\s*[-\w]+\s*)([~|^$*]?=)\s*([-\w#]*?#[-\w#]*)\s*\]/g,
              function (a, b, c, d) {
                return "[" + b + c + '"' + d + '"]';
              }
            );
            try {
              l.document.querySelector(b),
                m("Attribute selector with '#' must be quoted: " + a[0]),
                (a[0] = b);
            } catch (b) {
              m("Attribute selector with '#' was not fixed: " + a[0]);
            }
          }
        return s.apply(this, a);
      });
    for (var t in s)
      Object.prototype.hasOwnProperty.call(s, t) && (c.find[t] = s[t]);
    (c.fn.size = function () {
      return (
        m(
          "jQuery.fn.size() is deprecated and removed; use the .length property"
        ),
        this.length
      );
    }),
      (c.parseJSON = function () {
        return (
          m("jQuery.parseJSON is deprecated; use JSON.parse"),
          JSON.parse.apply(null, arguments)
        );
      }),
      (c.isNumeric = function (b) {
        var d = i(b),
          e = (function (a) {
            var b = a && a.toString();
            return !c.isArray(a) && 0 <= b - parseFloat(b) + 1;
          })(b);
        return (
          d !== e &&
            m("jQuery.isNumeric() should not be called on constructed objects"),
          e
        );
      }),
      n(c, "holdReady", c.holdReady, "jQuery.holdReady is deprecated"),
      n(
        c,
        "unique",
        c.uniqueSort,
        "jQuery.unique is deprecated; use jQuery.uniqueSort"
      ),
      e(
        c.expr,
        "filters",
        c.expr.pseudos,
        "jQuery.expr.filters is deprecated; use jQuery.expr.pseudos"
      ),
      e(
        c.expr,
        ":",
        c.expr.pseudos,
        "jQuery.expr[':'] is deprecated; use jQuery.expr.pseudos"
      );
    var d = c.ajax;
    c.ajax = function () {
      var a = d.apply(this, arguments);
      return (
        a.promise &&
          (n(a, "success", a.done, "jQXHR.success is deprecated and removed"),
          n(a, "error", a.fail, "jQXHR.error is deprecated and removed"),
          n(
            a,
            "complete",
            a.always,
            "jQXHR.complete is deprecated and removed"
          )),
        a
      );
    };
    var p = c.fn.removeAttr,
      f = c.fn.toggleClass;
    (c.fn.removeAttr = function (a) {
      var b = this;
      return (
        c.each(a.match(/\S+/g), function (d, e) {
          c.expr.match.bool.test(e) &&
            (m("jQuery.fn.removeAttr no longer sets boolean properties: " + e),
            b.prop(e, !1));
        }),
        p.apply(this, arguments)
      );
    }),
      (c.fn.toggleClass = function (a) {
        return void 0 !== a && "boolean" != typeof a
          ? f.apply(this, arguments)
          : (m("jQuery.fn.toggleClass( boolean ) is deprecated"),
            this.each(function () {
              var b = (this.getAttribute && this.getAttribute("class")) || "";
              b && c.data(this, "__className__", b),
                this.setAttribute &&
                  this.setAttribute(
                    "class",
                    b || !1 === a ? "" : c.data(this, "__className__") || ""
                  );
            }));
      });
    var u = !1;
    c.swap &&
      c.each(["height", "width", "reliableMarginRight"], function (a, b) {
        var d = c.cssHooks[b] && c.cssHooks[b].get;
        d &&
          (c.cssHooks[b].get = function () {
            var a;
            return (u = !0), (a = d.apply(this, arguments)), (u = !1), a;
          });
      }),
      (c.swap = function (b, c, d, e) {
        var a,
          f,
          g = {};
        for (f in (u || m("jQuery.swap() is undocumented and deprecated"), c))
          (g[f] = b.style[f]), (b.style[f] = c[f]);
        for (f in ((a = d.apply(b, e || [])), c)) b.style[f] = g[f];
        return a;
      });
    var y = c.data;
    c.data = function (b, d, e) {
      var a;
      if (d && "object" == typeof d && 2 === arguments.length) {
        a = c.hasData(b) && y.call(this, b);
        var f = {};
        for (var g in d)
          g === c.camelCase(g)
            ? (f[g] = d[g])
            : (m("jQuery.data() always sets/gets camelCased names: " + g),
              (a[g] = d[g]));
        return y.call(this, b, f), d;
      }
      return d &&
        "string" == typeof d &&
        d !== c.camelCase(d) &&
        (a = c.hasData(b) && y.call(this, b)) &&
        d in a
        ? (m("jQuery.data() always sets/gets camelCased names: " + d),
          2 < arguments.length && (a[d] = e),
          a[d])
        : y.apply(this, arguments);
    };
    var g = c.Tween.prototype.run,
      v = function (a) {
        return a;
      };
    (c.Tween.prototype.run = function () {
      1 < c.easing[this.easing].length &&
        (m(
          "'jQuery.easing." +
            this.easing.toString() +
            "' should use only one argument"
        ),
        (c.easing[this.easing] = v)),
        g.apply(this, arguments);
    }),
      (c.fx.interval = c.fx.interval || 13),
      l.requestAnimationFrame &&
        e(c.fx, "interval", c.fx.interval, "jQuery.fx.interval is deprecated");
    var j = c.fn.load,
      z = c.event.add,
      b = c.event.fix;
    (c.event.props = []),
      (c.event.fixHooks = {}),
      e(
        c.event.props,
        "concat",
        c.event.props.concat,
        "jQuery.event.props.concat() is deprecated and removed"
      ),
      (c.event.fix = function (d) {
        var e,
          f = d.type,
          a = this.fixHooks[f],
          g = c.event.props;
        if (g.length)
          for (
            m("jQuery.event.props are deprecated and removed: " + g.join());
            g.length;

          )
            c.event.addProp(g.pop());
        if (
          a &&
          !a._migrated_ &&
          ((a._migrated_ = !0),
          m("jQuery.event.fixHooks are deprecated and removed: " + f),
          (g = a.props) && g.length)
        )
          for (; g.length; ) c.event.addProp(g.pop());
        return (e = b.call(this, d)), a && a.filter ? a.filter(e, d) : e;
      }),
      (c.event.add = function (a, b) {
        return (
          a === l &&
            "load" === b &&
            "complete" === l.document.readyState &&
            m("jQuery(window).on('load'...) called after load event occurred"),
          z.apply(this, arguments)
        );
      }),
      c.each(["load", "unload", "error"], function (a, b) {
        c.fn[b] = function () {
          var a = Array.prototype.slice.call(arguments, 0);
          return "load" === b && "string" == typeof a[0]
            ? j.apply(this, a)
            : (m("jQuery.fn." + b + "() is deprecated"),
              a.splice(0, 0, b),
              arguments.length
                ? this.on.apply(this, a)
                : (this.triggerHandler.apply(this, a), this));
        };
      }),
      c.each(
        [
          "blur",
          "focus",
          "focusin",
          "focusout",
          "resize",
          "scroll",
          "click",
          "dblclick",
          "mousedown",
          "mouseup",
          "mousemove",
          "mouseover",
          "mouseout",
          "mouseenter",
          "mouseleave",
          "change",
          "select",
          "submit",
          "keydown",
          "keypress",
          "keyup",
          "contextmenu",
        ],
        function (a, b) {
          c.fn[b] = function (a, c) {
            return (
              m("jQuery.fn." + b + "() event shorthand is deprecated"),
              0 < arguments.length ? this.on(b, null, a, c) : this.trigger(b)
            );
          };
        }
      ),
      c(function () {
        c(l.document).triggerHandler("ready");
      }),
      (c.event.special.ready = {
        setup: function () {
          this === l.document && m("'ready' event is deprecated");
        },
      }),
      c.fn.extend({
        bind: function (a, b, c) {
          return m("jQuery.fn.bind() is deprecated"), this.on(a, null, b, c);
        },
        unbind: function (a, b) {
          return m("jQuery.fn.unbind() is deprecated"), this.off(a, null, b);
        },
        delegate: function (b, c, d, e) {
          return m("jQuery.fn.delegate() is deprecated"), this.on(c, b, d, e);
        },
        undelegate: function (a, b, c) {
          return (
            m("jQuery.fn.undelegate() is deprecated"),
            1 === arguments.length
              ? this.off(a, "**")
              : this.off(b, a || "**", c)
          );
        },
        hover: function (a, b) {
          return (
            m("jQuery.fn.hover() is deprecated"),
            this.on("mouseenter", a).on("mouseleave", b || a)
          );
        },
      });
    var w = c.fn.offset;
    c.fn.offset = function () {
      var b,
        d = this[0],
        a = {
          top: 0,
          left: 0,
        };
      return d && d.nodeType
        ? ((b = (d.ownerDocument || l.document).documentElement),
          c.contains(b, d)
            ? w.apply(this, arguments)
            : (m(
                "jQuery.fn.offset() requires an element connected to a document"
              ),
              a))
        : (m("jQuery.fn.offset() requires a valid DOM element"), a);
    };
    var x = c.param;
    c.param = function (b, d) {
      var e = c.ajaxSettings && c.ajaxSettings.traditional;
      return (
        void 0 === d &&
          e &&
          (m("jQuery.param() no longer uses jQuery.ajaxSettings.traditional"),
          (d = e)),
        x.call(this, b, d)
      );
    };
    var k = c.fn.andSelf || c.fn.addBack;
    c.fn.andSelf = function () {
      return (
        m(
          "jQuery.fn.andSelf() is deprecated and removed, use jQuery.fn.addBack()"
        ),
        k.apply(this, arguments)
      );
    };
    var A = c.Deferred,
      B = [
        [
          "resolve",
          "done",
          c.Callbacks("once memory"),
          c.Callbacks("once memory"),
          "resolved",
        ],
        [
          "reject",
          "fail",
          c.Callbacks("once memory"),
          c.Callbacks("once memory"),
          "rejected",
        ],
        ["notify", "progress", c.Callbacks("memory"), c.Callbacks("memory")],
      ];
    return (
      (c.Deferred = function (b) {
        var d = A(),
          e = d.promise();
        return (
          (d.pipe = e.pipe = function () {
            var a = arguments;
            return (
              m("deferred.pipe() is deprecated"),
              c
                .Deferred(function (b) {
                  c.each(B, function (f, g) {
                    var h = c.isFunction(a[f]) && a[f];
                    d[g[1]](function () {
                      var a = h && h.apply(this, arguments);
                      a && c.isFunction(a.promise)
                        ? a
                            .promise()
                            .done(b.resolve)
                            .fail(b.reject)
                            .progress(b.notify)
                        : b[g[0] + "With"](
                            this === e ? b.promise() : this,
                            h ? [a] : arguments
                          );
                    });
                  }),
                    (a = null);
                })
                .promise()
            );
          }),
          b && b.call(d, d),
          d
        );
      }),
      (c.Deferred.exceptionHook = A.exceptionHook),
      c
    );
  });

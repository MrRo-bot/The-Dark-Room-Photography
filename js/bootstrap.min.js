!(function (n, o) {
  "object" == typeof exports && "undefined" != typeof module
    ? o(exports, require("jquery"), require("popper.js"))
    : "function" == typeof define && define.amd
    ? define(["exports", "jquery", "popper.js"], o)
    : o(((n = n || self).bootstrap = {}), n.jQuery, n.Popper);
})(this, function (e, m, d) {
  "use strict";

  function o(o, t) {
    for (var e, a = 0; a < t.length; a++)
      (e = t[a]),
        (e.enumerable = e.enumerable || !1),
        (e.configurable = !0),
        "value" in e && (e.writable = !0),
        Object.defineProperty(o, e.key, e);
  }

  function f(a, t, e) {
    return t && o(a.prototype, t), e && o(a, e), a;
  }

  function s(a) {
    for (var n = 1; n < arguments.length; n++) {
      var o = null == arguments[n] ? {} : arguments[n],
        i = Object.keys(o);
      "function" == typeof Object.getOwnPropertySymbols &&
        (i = i.concat(
          Object.getOwnPropertySymbols(o).filter(function (e) {
            return Object.getOwnPropertyDescriptor(o, e).enumerable;
          })
        )),
        i.forEach(function (l) {
          var t, r, s;
          (t = a),
            (s = o[(r = l)]),
            r in t
              ? Object.defineProperty(t, r, {
                  value: s,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (t[r] = s);
        });
    }
    return a;
  }

  function t(o) {
    var t = this,
      e = !1;
    return (
      m(this).one(b.TRANSITION_END, function () {
        e = !0;
      }),
      setTimeout(function () {
        e || b.triggerTransitionEnd(t);
      }, o),
      this
    );
  }

  function n(d, c, t) {
    if (0 === d.length) return d;
    if (t && "function" == typeof t) return t(d);
    for (
      var e = new window.DOMParser().parseFromString(d, "text/html"),
        s = Object.keys(c),
        a = [].slice.call(e.body.querySelectorAll("*")),
        n = function (e) {
          var l = a[e],
            t = l.nodeName.toLowerCase();
          if (-1 === s.indexOf(l.nodeName.toLowerCase()))
            return l.parentNode.removeChild(l), "continue";
          var n = [].slice.call(l.attributes),
            o = [].concat(c["*"] || [], c[t] || []);
          n.forEach(function (e) {
            (function (a, t) {
              var e = a.nodeName.toLowerCase();
              if (-1 !== t.indexOf(e))
                return (
                  -1 === W.indexOf(e) ||
                  !!(a.nodeValue.match(x) || a.nodeValue.match(F))
                );
              for (
                var n = t.filter(function (e) {
                    return e instanceof RegExp;
                  }),
                  i = 0,
                  l = n.length;
                i < l;
                i++
              )
                if (e.match(n[i])) return !0;
              return !1;
            })(e, o) || l.removeAttribute(e.nodeName);
          });
        },
        i = 0,
        l = a.length;
      i < l;
      i++
    )
      n(i);
    return e.body.innerHTML;
  }
  (m = m && m.hasOwnProperty("default") ? m.default : m),
    (d = d && d.hasOwnProperty("default") ? d.default : d);
  var b = {
    TRANSITION_END: "bsTransitionEnd",
    getUID: function (e) {
      for (; (e += ~~(1e6 * Math.random())), document.getElementById(e); );
      return e;
    },
    getSelectorFromElement: function (o) {
      var t = o.getAttribute("data-target");
      if (!t || "#" === t) {
        var a = o.getAttribute("href");
        t = a && "#" !== a ? a.trim() : "";
      }
      try {
        return document.querySelector(t) ? t : null;
      } catch (e) {
        return null;
      }
    },
    getTransitionDurationFromElement: function (a) {
      if (!a) return 0;
      var t = m(a).css("transition-duration"),
        l = m(a).css("transition-delay"),
        r = parseFloat(t),
        i = parseFloat(l);
      return r || i
        ? ((t = t.split(",")[0]),
          (l = l.split(",")[0]),
          1e3 * (parseFloat(t) + parseFloat(l)))
        : 0;
    },
    reflow: function (e) {
      return e.offsetHeight;
    },
    triggerTransitionEnd: function (e) {
      m(e).trigger("transitionend");
    },
    supportsTransitionEnd: function () {
      return !0;
    },
    isElement: function (e) {
      return (e[0] || e).nodeType;
    },
    typeCheckConfig: function (l, t, e) {
      for (var n in e)
        if (Object.prototype.hasOwnProperty.call(e, n)) {
          var i = e[n],
            o = t[n],
            r =
              o && b.isElement(o)
                ? "element"
                : ((s = o),
                  {}.toString
                    .call(s)
                    .match(/\s([a-z]+)/i)[1]
                    .toLowerCase());
          if (!new RegExp(i).test(r))
            throw new Error(
              l.toUpperCase() +
                ': Option "' +
                n +
                '" provided type "' +
                r +
                '" but expected type "' +
                i +
                '".'
            );
        }
      var s;
    },
    findShadowRoot: function (n) {
      if (!document.documentElement.attachShadow) return null;
      if ("function" != typeof n.getRootNode)
        return n instanceof ShadowRoot
          ? n
          : n.parentNode
          ? b.findShadowRoot(n.parentNode)
          : null;
      var t = n.getRootNode();
      return t instanceof ShadowRoot ? t : null;
    },
  };
  (m.fn.emulateTransitionEnd = t),
    (m.event.special[b.TRANSITION_END] = {
      bindType: "transitionend",
      delegateType: "transitionend",
      handle: function (e) {
        if (m(e.target).is(this))
          return e.handleObj.handler.apply(this, arguments);
      },
    });
  var a = m.fn.alert,
    i = {
      CLOSE: "close.bs.alert",
      CLOSED: "closed.bs.alert",
      CLICK_DATA_API: "click.bs.alert.data-api",
    },
    l = (function () {
      function o(e) {
        this._element = e;
      }
      var e = o.prototype;
      return (
        (e.close = function (n) {
          var t = this._element;
          n && (t = this._getRootElement(n)),
            this._triggerCloseEvent(t).isDefaultPrevented() ||
              this._removeElement(t);
        }),
        (e.dispose = function () {
          m.removeData(this._element, "bs.alert"), (this._element = null);
        }),
        (e._getRootElement = function (o) {
          var t = b.getSelectorFromElement(o),
            e = !1;
          return (
            t && (e = document.querySelector(t)),
            e || (e = m(o).closest(".alert")[0]),
            e
          );
        }),
        (e._triggerCloseEvent = function (n) {
          var t = m.Event(i.CLOSE);
          return m(n).trigger(t), t;
        }),
        (e._removeElement = function (o) {
          var e = this;
          if ((m(o).removeClass("show"), m(o).hasClass("fade"))) {
            var n = b.getTransitionDurationFromElement(o);
            m(o)
              .one(b.TRANSITION_END, function (n) {
                return e._destroyElement(o, n);
              })
              .emulateTransitionEnd(n);
          } else this._destroyElement(o);
        }),
        (e._destroyElement = function (e) {
          m(e).detach().trigger(i.CLOSED).remove();
        }),
        (o._jQueryInterface = function (a) {
          return this.each(function () {
            var n = m(this),
              t = n.data("bs.alert");
            t || ((t = new o(this)), n.data("bs.alert", t)),
              "close" === a && t[a](this);
          });
        }),
        (o._handleDismiss = function (n) {
          return function (e) {
            e && e.preventDefault(), n.close(this);
          };
        }),
        f(o, null, [
          {
            key: "VERSION",
            get: function () {
              return "4.3.1";
            },
          },
        ]),
        o
      );
    })();
  m(document).on(
    i.CLICK_DATA_API,
    '[data-dismiss="alert"]',
    l._handleDismiss(new l())
  ),
    (m.fn.alert = l._jQueryInterface),
    (m.fn.alert.Constructor = l),
    (m.fn.alert.noConflict = function () {
      return (m.fn.alert = a), l._jQueryInterface;
    });
  var r = m.fn.button,
    c = {
      CLICK_DATA_API: "click.bs.button.data-api",
      FOCUS_BLUR_DATA_API: "focus.bs.button.data-api blur.bs.button.data-api",
    },
    _ = (function () {
      function o(e) {
        this._element = e;
      }
      var e = o.prototype;
      return (
        (e.toggle = function () {
          var a = !0,
            l = !0,
            r = m(this._element).closest('[data-toggle="buttons"]')[0];
          if (r) {
            var n = this._element.querySelector('input:not([type="hidden"])');
            if (n) {
              if ("radio" === n.type)
                if (n.checked && this._element.classList.contains("active"))
                  a = !1;
                else {
                  var i = r.querySelector(".active");
                  i && m(i).removeClass("active");
                }
              if (a) {
                if (
                  n.hasAttribute("disabled") ||
                  r.hasAttribute("disabled") ||
                  n.classList.contains("disabled") ||
                  r.classList.contains("disabled")
                )
                  return;
                (n.checked = !this._element.classList.contains("active")),
                  m(n).trigger("change");
              }
              n.focus(), (l = !1);
            }
          }
          l &&
            this._element.setAttribute(
              "aria-pressed",
              !this._element.classList.contains("active")
            ),
            a && m(this._element).toggleClass("active");
        }),
        (e.dispose = function () {
          m.removeData(this._element, "bs.button"), (this._element = null);
        }),
        (o._jQueryInterface = function (n) {
          return this.each(function () {
            var e = m(this).data("bs.button");
            e || ((e = new o(this)), m(this).data("bs.button", e)),
              "toggle" === n && e[n]();
          });
        }),
        f(o, null, [
          {
            key: "VERSION",
            get: function () {
              return "4.3.1";
            },
          },
        ]),
        o
      );
    })();
  m(document)
    .on(c.CLICK_DATA_API, '[data-toggle^="button"]', function (n) {
      n.preventDefault();
      var t = n.target;
      m(t).hasClass("btn") || (t = m(t).closest(".btn")),
        _._jQueryInterface.call(m(t), "toggle");
    })
    .on(c.FOCUS_BLUR_DATA_API, '[data-toggle^="button"]', function (n) {
      var t = m(n.target).closest(".btn")[0];
      m(t).toggleClass("focus", /^focus(in)?$/.test(n.type));
    }),
    (m.fn.button = _._jQueryInterface),
    (m.fn.button.Constructor = _),
    (m.fn.button.noConflict = function () {
      return (m.fn.button = r), _._jQueryInterface;
    });
  var p = m.fn.carousel,
    h = {
      interval: 5e3,
      keyboard: !0,
      slide: !1,
      pause: "hover",
      wrap: !0,
      touch: !0,
    },
    v = {
      interval: "(number|boolean)",
      keyboard: "boolean",
      slide: "(boolean|string)",
      pause: "(string|boolean)",
      wrap: "boolean",
      touch: "boolean",
    },
    E = {
      SLIDE: "slide.bs.carousel",
      SLID: "slid.bs.carousel",
      KEYDOWN: "keydown.bs.carousel",
      MOUSEENTER: "mouseenter.bs.carousel",
      MOUSELEAVE: "mouseleave.bs.carousel",
      TOUCHSTART: "touchstart.bs.carousel",
      TOUCHMOVE: "touchmove.bs.carousel",
      TOUCHEND: "touchend.bs.carousel",
      POINTERDOWN: "pointerdown.bs.carousel",
      POINTERUP: "pointerup.bs.carousel",
      DRAG_START: "dragstart.bs.carousel",
      LOAD_DATA_API: "load.bs.carousel.data-api",
      CLICK_DATA_API: "click.bs.carousel.data-api",
    },
    y = {
      TOUCH: "touch",
      PEN: "pen",
    },
    C = (function () {
      function a(n, t) {
        (this._items = null),
          (this._interval = null),
          (this._activeElement = null),
          (this._isPaused = !1),
          (this._isSliding = !1),
          (this.touchTimeout = null),
          (this.touchStartX = 0),
          (this.touchDeltaX = 0),
          (this._config = this._getConfig(t)),
          (this._element = n),
          (this._indicatorsElement = this._element.querySelector(
            ".carousel-indicators"
          )),
          (this._touchSupported =
            "ontouchstart" in document.documentElement ||
            0 < navigator.maxTouchPoints),
          (this._pointerEvent = !!(
            window.PointerEvent || window.MSPointerEvent
          )),
          this._addEventListeners();
      }
      var e = a.prototype;
      return (
        (e.next = function () {
          this._isSliding || this._slide("next");
        }),
        (e.nextWhenVisible = function () {
          !document.hidden &&
            m(this._element).is(":visible") &&
            "hidden" !== m(this._element).css("visibility") &&
            this.next();
        }),
        (e.prev = function () {
          this._isSliding || this._slide("prev");
        }),
        (e.pause = function (e) {
          e || (this._isPaused = !0),
            this._element.querySelector(
              ".carousel-item-next, .carousel-item-prev"
            ) && (b.triggerTransitionEnd(this._element), this.cycle(!0)),
            clearInterval(this._interval),
            (this._interval = null);
        }),
        (e.cycle = function (e) {
          e || (this._isPaused = !1),
            this._interval &&
              (clearInterval(this._interval), (this._interval = null)),
            this._config.interval &&
              !this._isPaused &&
              (this._interval = setInterval(
                (document.visibilityState
                  ? this.nextWhenVisible
                  : this.next
                ).bind(this),
                this._config.interval
              ));
        }),
        (e.to = function (o) {
          var t = this;
          this._activeElement = this._element.querySelector(
            ".active.carousel-item"
          );
          var e = this._getItemIndex(this._activeElement);
          if (!(o > this._items.length - 1 || 0 > o))
            if (this._isSliding)
              m(this._element).one(E.SLID, function () {
                return t.to(o);
              });
            else {
              if (e === o) return this.pause(), void this.cycle();
              var n = e < o ? "next" : "prev";
              this._slide(n, this._items[o]);
            }
        }),
        (e.dispose = function () {
          m(this._element).off(".bs.carousel"),
            m.removeData(this._element, "bs.carousel"),
            (this._items = null),
            (this._config = null),
            (this._element = null),
            (this._interval = null),
            (this._isPaused = null),
            (this._isSliding = null),
            (this._activeElement = null),
            (this._indicatorsElement = null);
        }),
        (e._getConfig = function (e) {
          return (e = s({}, h, e)), b.typeCheckConfig("carousel", e, v), e;
        }),
        (e._handleSwipe = function () {
          var n = Math.abs(this.touchDeltaX);
          if (!(40 >= n)) {
            var t = n / this.touchDeltaX;
            0 < t && this.prev(), 0 > t && this.next();
          }
        }),
        (e._addEventListeners = function () {
          var n = this;
          this._config.keyboard &&
            m(this._element).on(E.KEYDOWN, function (e) {
              return n._keydown(e);
            }),
            "hover" === this._config.pause &&
              m(this._element)
                .on(E.MOUSEENTER, function (e) {
                  return n.pause(e);
                })
                .on(E.MOUSELEAVE, function (e) {
                  return n.cycle(e);
                }),
            this._config.touch && this._addTouchEventListeners();
        }),
        (e._addTouchEventListeners = function () {
          var o = this;
          if (this._touchSupported) {
            var n = function (e) {
                o._pointerEvent && y[e.originalEvent.pointerType.toUpperCase()]
                  ? (o.touchStartX = e.originalEvent.clientX)
                  : o._pointerEvent ||
                    (o.touchStartX = e.originalEvent.touches[0].clientX);
              },
              e = function (e) {
                o._pointerEvent &&
                  y[e.originalEvent.pointerType.toUpperCase()] &&
                  (o.touchDeltaX = e.originalEvent.clientX - o.touchStartX),
                  o._handleSwipe(),
                  "hover" === o._config.pause &&
                    (o.pause(),
                    o.touchTimeout && clearTimeout(o.touchTimeout),
                    (o.touchTimeout = setTimeout(function (e) {
                      return o.cycle(e);
                    }, 500 + o._config.interval)));
              };
            m(this._element.querySelectorAll(".carousel-item img")).on(
              E.DRAG_START,
              function (e) {
                return e.preventDefault();
              }
            ),
              this._pointerEvent
                ? (m(this._element).on(E.POINTERDOWN, function (e) {
                    return n(e);
                  }),
                  m(this._element).on(E.POINTERUP, function (n) {
                    return e(n);
                  }),
                  this._element.classList.add("pointer-event"))
                : (m(this._element).on(E.TOUCHSTART, function (e) {
                    return n(e);
                  }),
                  m(this._element).on(E.TOUCHMOVE, function (n) {
                    var t;
                    o.touchDeltaX =
                      (t = n).originalEvent.touches &&
                      1 < t.originalEvent.touches.length
                        ? 0
                        : t.originalEvent.touches[0].clientX - o.touchStartX;
                  }),
                  m(this._element).on(E.TOUCHEND, function (n) {
                    return e(n);
                  }));
          }
        }),
        (e._keydown = function (e) {
          if (!/input|textarea/i.test(e.target.tagName))
            switch (e.which) {
              case 37:
                e.preventDefault(), this.prev();
                break;
              case 39:
                e.preventDefault(), this.next();
            }
        }),
        (e._getItemIndex = function (e) {
          return (
            (this._items =
              e && e.parentNode
                ? [].slice.call(e.parentNode.querySelectorAll(".carousel-item"))
                : []),
            this._items.indexOf(e)
          );
        }),
        (e._getItemByDirection = function (n, t) {
          var e = this._getItemIndex(t),
            o = this._items.length - 1;
          if (
            ((n === "prev" && 0 === e) || (n === "next" && e === o)) &&
            !this._config.wrap
          )
            return t;
          var a = (e + (n === "prev" ? -1 : 1)) % this._items.length;
          return -1 == a ? this._items[this._items.length - 1] : this._items[a];
        }),
        (e._triggerSlideEvent = function (a, t) {
          var e = this._getItemIndex(a),
            n = this._getItemIndex(
              this._element.querySelector(".active.carousel-item")
            ),
            i = m.Event(E.SLIDE, {
              relatedTarget: a,
              direction: t,
              from: n,
              to: e,
            });
          return m(this._element).trigger(i), i;
        }),
        (e._setActiveIndicatorElement = function (o) {
          if (this._indicatorsElement) {
            var t = [].slice.call(
              this._indicatorsElement.querySelectorAll(".active")
            );
            m(t).removeClass("active");
            var e = this._indicatorsElement.children[this._getItemIndex(o)];
            e && m(e).addClass("active");
          }
        }),
        (e._slide = function (g, t) {
          var e,
            _,
            p,
            v = this,
            r = this._element.querySelector(".active.carousel-item"),
            s = this._getItemIndex(r),
            a = t || (r && this._getItemByDirection(g, r)),
            l = this._getItemIndex(a),
            c = !!this._interval;
          if (
            ((p =
              g === "next"
                ? ((e = "carousel-item-left"),
                  (_ = "carousel-item-next"),
                  "left")
                : ((e = "carousel-item-right"),
                  (_ = "carousel-item-prev"),
                  "right")),
            a && m(a).hasClass("active"))
          )
            this._isSliding = !1;
          else if (
            !this._triggerSlideEvent(a, p).isDefaultPrevented() &&
            r &&
            a
          ) {
            (this._isSliding = !0),
              c && this.pause(),
              this._setActiveIndicatorElement(a);
            var h = m.Event(E.SLID, {
              relatedTarget: a,
              direction: p,
              from: s,
              to: l,
            });
            if (m(this._element).hasClass("slide")) {
              m(a).addClass(_), b.reflow(a), m(r).addClass(e), m(a).addClass(e);
              var u = parseInt(a.getAttribute("data-interval"), 10);
              this._config.interval = u
                ? ((this._config.defaultInterval =
                    this._config.defaultInterval || this._config.interval),
                  u)
                : this._config.defaultInterval || this._config.interval;
              var f = b.getTransitionDurationFromElement(r);
              m(r)
                .one(b.TRANSITION_END, function () {
                  m(a)
                    .removeClass(e + " " + _)
                    .addClass("active"),
                    m(r).removeClass("active " + _ + " " + e),
                    (v._isSliding = !1),
                    setTimeout(function () {
                      return m(v._element).trigger(h);
                    }, 0);
                })
                .emulateTransitionEnd(f);
            } else
              m(r).removeClass("active"),
                m(a).addClass("active"),
                (this._isSliding = !1),
                m(this._element).trigger(h);
            c && this.cycle();
          }
        }),
        (a._jQueryInterface = function (o) {
          return this.each(function () {
            var i = m(this).data("bs.carousel"),
              l = s({}, h, m(this).data());
            "object" == typeof o && (l = s({}, l, o));
            var r = "string" == typeof o ? o : l.slide;
            if (
              (i || ((i = new a(this, l)), m(this).data("bs.carousel", i)),
              "number" == typeof o)
            )
              i.to(o);
            else if ("string" == typeof r) {
              if ("undefined" == typeof i[r])
                throw new TypeError('No method named "' + r + '"');
              i[r]();
            } else l.interval && l.ride && (i.pause(), i.cycle());
          });
        }),
        (a._dataApiClickHandler = function (l) {
          var t = b.getSelectorFromElement(this);
          if (t) {
            var e = m(t)[0];
            if (e && m(e).hasClass("carousel")) {
              var n = s({}, m(e).data(), m(this).data()),
                i = this.getAttribute("data-slide-to");
              i && (n.interval = !1),
                a._jQueryInterface.call(m(e), n),
                i && m(e).data("bs.carousel").to(i),
                l.preventDefault();
            }
          }
        }),
        f(a, null, [
          {
            key: "VERSION",
            get: function () {
              return "4.3.1";
            },
          },
          {
            key: "Default",
            get: function () {
              return h;
            },
          },
        ]),
        a
      );
    })();
  m(document).on(
    E.CLICK_DATA_API,
    "[data-slide], [data-slide-to]",
    C._dataApiClickHandler
  ),
    m(window).on(E.LOAD_DATA_API, function () {
      for (
        var o,
          a = [].slice.call(
            document.querySelectorAll('[data-ride="carousel"]')
          ),
          t = 0,
          l = a.length;
        t < l;
        t++
      )
        (o = m(a[t])), C._jQueryInterface.call(o, o.data());
    }),
    (m.fn.carousel = C._jQueryInterface),
    (m.fn.carousel.Constructor = C),
    (m.fn.carousel.noConflict = function () {
      return (m.fn.carousel = p), C._jQueryInterface;
    });
  var S = m.fn.collapse,
    T = {
      toggle: !0,
      parent: "",
    },
    I = {
      toggle: "boolean",
      parent: "(string|element)",
    },
    D = {
      SHOW: "show.bs.collapse",
      SHOWN: "shown.bs.collapse",
      HIDE: "hide.bs.collapse",
      HIDDEN: "hidden.bs.collapse",
      CLICK_DATA_API: "click.bs.collapse.data-api",
    },
    A = (function () {
      function l(l, e) {
        (this._isTransitioning = !1),
          (this._element = l),
          (this._config = this._getConfig(e)),
          (this._triggerArray = [].slice.call(
            document.querySelectorAll(
              '[data-toggle="collapse"][href="#' +
                l.id +
                '"],[data-toggle="collapse"][data-target="#' +
                l.id +
                '"]'
            )
          ));
        for (
          var t = [].slice.call(
              document.querySelectorAll('[data-toggle="collapse"]')
            ),
            n = 0,
            d = t.length;
          n < d;
          n++
        ) {
          var o = t[n],
            r = b.getSelectorFromElement(o),
            s = [].slice
              .call(document.querySelectorAll(r))
              .filter(function (e) {
                return e === l;
              });
          null !== r &&
            0 < s.length &&
            ((this._selector = r), this._triggerArray.push(o));
        }
        (this._parent = this._config.parent ? this._getParent() : null),
          this._config.parent ||
            this._addAriaAndCollapsedClass(this._element, this._triggerArray),
          this._config.toggle && this.toggle();
      }
      var e = l.prototype;
      return (
        (e.toggle = function () {
          m(this._element).hasClass("show") ? this.hide() : this.show();
        }),
        (e.show = function () {
          var a,
            d,
            c = this;
          if (
            !this._isTransitioning &&
            !m(this._element).hasClass("show") &&
            (this._parent &&
              0 ===
                (a = [].slice
                  .call(this._parent.querySelectorAll(".show, .collapsing"))
                  .filter(function (e) {
                    return "string" == typeof c._config.parent
                      ? e.getAttribute("data-parent") === c._config.parent
                      : e.classList.contains("collapse");
                  })).length &&
              (a = null),
            !(
              a &&
              (d = m(a).not(this._selector).data("bs.collapse")) &&
              d._isTransitioning
            ))
          ) {
            var n = m.Event(D.SHOW);
            if ((m(this._element).trigger(n), !n.isDefaultPrevented())) {
              a &&
                (l._jQueryInterface.call(m(a).not(this._selector), "hide"),
                d || m(a).data("bs.collapse", null));
              var i = this._getDimension();
              m(this._element).removeClass("collapse").addClass("collapsing"),
                (this._element.style[i] = 0),
                this._triggerArray.length &&
                  m(this._triggerArray)
                    .removeClass("collapsed")
                    .attr("aria-expanded", !0),
                this.setTransitioning(!0);
              var o = "scroll" + (i[0].toUpperCase() + i.slice(1)),
                r = b.getTransitionDurationFromElement(this._element);
              m(this._element)
                .one(b.TRANSITION_END, function () {
                  m(c._element)
                    .removeClass("collapsing")
                    .addClass("collapse")
                    .addClass("show"),
                    (c._element.style[i] = ""),
                    c.setTransitioning(!1),
                    m(c._element).trigger(D.SHOWN);
                })
                .emulateTransitionEnd(r),
                (this._element.style[i] = this._element[o] + "px");
            }
          }
        }),
        (e.hide = function () {
          var l = this;
          if (!this._isTransitioning && m(this._element).hasClass("show")) {
            var t = m.Event(D.HIDE);
            if ((m(this._element).trigger(t), !t.isDefaultPrevented())) {
              var e = this._getDimension();
              (this._element.style[e] =
                this._element.getBoundingClientRect()[e] + "px"),
                b.reflow(this._element),
                m(this._element)
                  .addClass("collapsing")
                  .removeClass("collapse")
                  .removeClass("show");
              var n = this._triggerArray.length;
              if (0 < n)
                for (var i = 0; i < n; i++) {
                  var d = this._triggerArray[i],
                    r = b.getSelectorFromElement(d);
                  null !== r &&
                    (m([].slice.call(document.querySelectorAll(r))).hasClass(
                      "show"
                    ) ||
                      m(d).addClass("collapsed").attr("aria-expanded", !1));
                }
              this.setTransitioning(!0), (this._element.style[e] = "");
              var s = b.getTransitionDurationFromElement(this._element);
              m(this._element)
                .one(b.TRANSITION_END, function () {
                  l.setTransitioning(!1),
                    m(l._element)
                      .removeClass("collapsing")
                      .addClass("collapse")
                      .trigger(D.HIDDEN);
                })
                .emulateTransitionEnd(s);
            }
          }
        }),
        (e.setTransitioning = function (e) {
          this._isTransitioning = e;
        }),
        (e.dispose = function () {
          m.removeData(this._element, "bs.collapse"),
            (this._config = null),
            (this._parent = null),
            (this._element = null),
            (this._triggerArray = null),
            (this._isTransitioning = null);
        }),
        (e._getConfig = function (e) {
          return (
            ((e = s({}, T, e)).toggle = !!e.toggle),
            b.typeCheckConfig("collapse", e, I),
            e
          );
        }),
        (e._getDimension = function () {
          return m(this._element).hasClass("width") ? "width" : "height";
        }),
        (e._getParent = function () {
          var o,
            a = this;
          b.isElement(this._config.parent)
            ? ((o = this._config.parent),
              "undefined" != typeof this._config.parent.jquery &&
                (o = this._config.parent[0]))
            : (o = document.querySelector(this._config.parent));
          var n =
              '[data-toggle="collapse"][data-parent="' +
              this._config.parent +
              '"]',
            e = [].slice.call(o.querySelectorAll(n));
          return (
            m(e).each(function (n, t) {
              a._addAriaAndCollapsedClass(l._getTargetFromElement(t), [t]);
            }),
            o
          );
        }),
        (e._addAriaAndCollapsedClass = function (o, t) {
          var e = m(o).hasClass("show");
          t.length &&
            m(t).toggleClass("collapsed", !e).attr("aria-expanded", e);
        }),
        (l._getTargetFromElement = function (n) {
          var t = b.getSelectorFromElement(n);
          return t ? document.querySelector(t) : null;
        }),
        (l._jQueryInterface = function (o) {
          return this.each(function () {
            var a = m(this),
              t = a.data("bs.collapse"),
              i = s({}, T, a.data(), "object" == typeof o && o ? o : {});
            if (
              (!t && i.toggle && /show|hide/.test(o) && (i.toggle = !1),
              t || ((t = new l(this, i)), a.data("bs.collapse", t)),
              "string" == typeof o)
            ) {
              if ("undefined" == typeof t[o])
                throw new TypeError('No method named "' + o + '"');
              t[o]();
            }
          });
        }),
        f(l, null, [
          {
            key: "VERSION",
            get: function () {
              return "4.3.1";
            },
          },
          {
            key: "Default",
            get: function () {
              return T;
            },
          },
        ]),
        l
      );
    })();
  m(document).on(D.CLICK_DATA_API, '[data-toggle="collapse"]', function (o) {
    "A" === o.currentTarget.tagName && o.preventDefault();
    var a = m(this),
      t = b.getSelectorFromElement(this),
      e = [].slice.call(document.querySelectorAll(t));
    m(e).each(function () {
      var n = m(this),
        t = n.data("bs.collapse") ? "toggle" : a.data();
      A._jQueryInterface.call(n, t);
    });
  }),
    (m.fn.collapse = A._jQueryInterface),
    (m.fn.collapse.Constructor = A),
    (m.fn.collapse.noConflict = function () {
      return (m.fn.collapse = S), A._jQueryInterface;
    });
  var w = m.fn.dropdown,
    N = {
      HIDE: "hide.bs.dropdown",
      HIDDEN: "hidden.bs.dropdown",
      SHOW: "show.bs.dropdown",
      SHOWN: "shown.bs.dropdown",
      CLICK: "click.bs.dropdown",
      CLICK_DATA_API: "click.bs.dropdown.data-api",
      KEYDOWN_DATA_API: "keydown.bs.dropdown.data-api",
      KEYUP_DATA_API: "keyup.bs.dropdown.data-api",
    },
    O = {
      offset: 0,
      flip: !0,
      boundary: "scrollParent",
      reference: "toggle",
      display: "dynamic",
    },
    k = {
      offset: "(number|string|function)",
      flip: "boolean",
      boundary: "(string|element)",
      reference: "(string|element)",
      display: "string",
    },
    P = (function () {
      function g(n, t) {
        (this._element = n),
          (this._popper = null),
          (this._config = this._getConfig(t)),
          (this._menu = this._getMenuElement()),
          (this._inNavbar = this._detectNavbar()),
          this._addEventListeners();
      }
      var e = g.prototype;
      return (
        (e.toggle = function () {
          if (
            !this._element.disabled &&
            !m(this._element).hasClass("disabled")
          ) {
            var a = g._getParentFromElement(this._element),
              t = m(this._menu).hasClass("show");
            if ((g._clearMenus(), !t)) {
              var e = {
                  relatedTarget: this._element,
                },
                n = m.Event(N.SHOW, e);
              if ((m(a).trigger(n), !n.isDefaultPrevented())) {
                if (!this._inNavbar) {
                  if ("undefined" == typeof d)
                    throw new TypeError(
                      "Bootstrap's dropdowns require Popper.js (https://popper.js.org/)"
                    );
                  var i = this._element;
                  "parent" === this._config.reference
                    ? (i = a)
                    : b.isElement(this._config.reference) &&
                      ((i = this._config.reference),
                      "undefined" != typeof this._config.reference.jquery &&
                        (i = this._config.reference[0])),
                    "scrollParent" !== this._config.boundary &&
                      m(a).addClass("position-static"),
                    (this._popper = new d(
                      i,
                      this._menu,
                      this._getPopperConfig()
                    ));
                }
                "ontouchstart" in document.documentElement &&
                  0 === m(a).closest(".navbar-nav").length &&
                  m(document.body).children().on("mouseover", null, m.noop),
                  this._element.focus(),
                  this._element.setAttribute("aria-expanded", !0),
                  m(this._menu).toggleClass("show"),
                  m(a).toggleClass("show").trigger(m.Event(N.SHOWN, e));
              }
            }
          }
        }),
        (e.show = function () {
          if (
            !(
              this._element.disabled ||
              m(this._element).hasClass("disabled") ||
              m(this._menu).hasClass("show")
            )
          ) {
            var o = {
                relatedTarget: this._element,
              },
              t = m.Event(N.SHOW, o),
              e = g._getParentFromElement(this._element);
            m(e).trigger(t),
              t.isDefaultPrevented() ||
                (m(this._menu).toggleClass("show"),
                m(e).toggleClass("show").trigger(m.Event(N.SHOWN, o)));
          }
        }),
        (e.hide = function () {
          if (
            !this._element.disabled &&
            !m(this._element).hasClass("disabled") &&
            m(this._menu).hasClass("show")
          ) {
            var o = {
                relatedTarget: this._element,
              },
              t = m.Event(N.HIDE, o),
              e = g._getParentFromElement(this._element);
            m(e).trigger(t),
              t.isDefaultPrevented() ||
                (m(this._menu).toggleClass("show"),
                m(e).toggleClass("show").trigger(m.Event(N.HIDDEN, o)));
          }
        }),
        (e.dispose = function () {
          m.removeData(this._element, "bs.dropdown"),
            m(this._element).off(".bs.dropdown"),
            (this._element = null),
            (this._menu = null) !== this._popper &&
              (this._popper.destroy(), (this._popper = null));
        }),
        (e.update = function () {
          (this._inNavbar = this._detectNavbar()),
            null !== this._popper && this._popper.scheduleUpdate();
        }),
        (e._addEventListeners = function () {
          var n = this;
          m(this._element).on(N.CLICK, function (e) {
            e.preventDefault(), e.stopPropagation(), n.toggle();
          });
        }),
        (e._getConfig = function (e) {
          return (
            (e = s({}, this.constructor.Default, m(this._element).data(), e)),
            b.typeCheckConfig("dropdown", e, this.constructor.DefaultType),
            e
          );
        }),
        (e._getMenuElement = function () {
          if (!this._menu) {
            var e = g._getParentFromElement(this._element);
            e && (this._menu = e.querySelector(".dropdown-menu"));
          }
          return this._menu;
        }),
        (e._getPlacement = function () {
          var n = m(this._element.parentNode),
            t = "bottom-start";
          return (
            n.hasClass("dropup")
              ? ((t = "top-start"),
                m(this._menu).hasClass("dropdown-menu-right") &&
                  (t = "top-end"))
              : n.hasClass("dropright")
              ? (t = "right-start")
              : n.hasClass("dropleft")
              ? (t = "left-start")
              : m(this._menu).hasClass("dropdown-menu-right") &&
                (t = "bottom-end"),
            t
          );
        }),
        (e._detectNavbar = function () {
          return 0 < m(this._element).closest(".navbar").length;
        }),
        (e._getOffset = function () {
          var n = this,
            e = {};
          return (
            "function" == typeof this._config.offset
              ? (e.fn = function (e) {
                  return (
                    (e.offsets = s(
                      {},
                      e.offsets,
                      n._config.offset(e.offsets, n._element) || {}
                    )),
                    e
                  );
                })
              : (e.offset = this._config.offset),
            e
          );
        }),
        (e._getPopperConfig = function () {
          var e = {
            placement: this._getPlacement(),
            modifiers: {
              offset: this._getOffset(),
              flip: {
                enabled: this._config.flip,
              },
              preventOverflow: {
                boundariesElement: this._config.boundary,
              },
            },
          };
          return (
            "static" === this._config.display &&
              (e.modifiers.applyStyle = {
                enabled: !1,
              }),
            e
          );
        }),
        (g._jQueryInterface = function (n) {
          return this.each(function () {
            var e = m(this).data("bs.dropdown");
            if (
              (e ||
                ((e = new g(this, "object" == typeof n ? n : null)),
                m(this).data("bs.dropdown", e)),
              "string" == typeof n)
            ) {
              if ("undefined" == typeof e[n])
                throw new TypeError('No method named "' + n + '"');
              e[n]();
            }
          });
        }),
        (g._clearMenus = function (d) {
          if (!d || (3 !== d.which && ("keyup" !== d.type || 9 === d.which)))
            for (
              var t = [].slice.call(
                  document.querySelectorAll('[data-toggle="dropdown"]')
                ),
                e = 0,
                c = t.length;
              e < c;
              e++
            ) {
              var i = g._getParentFromElement(t[e]),
                o = m(t[e]).data("bs.dropdown"),
                r = {
                  relatedTarget: t[e],
                };
              if ((d && "click" === d.type && (r.clickEvent = d), o)) {
                var s = o._menu;
                if (
                  m(i).hasClass("show") &&
                  !(
                    d &&
                    (("click" === d.type &&
                      /input|textarea/i.test(d.target.tagName)) ||
                      ("keyup" === d.type && 9 === d.which)) &&
                    m.contains(i, d.target)
                  )
                ) {
                  var a = m.Event(N.HIDE, r);
                  m(i).trigger(a),
                    a.isDefaultPrevented() ||
                      ("ontouchstart" in document.documentElement &&
                        m(document.body)
                          .children()
                          .off("mouseover", null, m.noop),
                      t[e].setAttribute("aria-expanded", "false"),
                      m(s).removeClass("show"),
                      m(i).removeClass("show").trigger(m.Event(N.HIDDEN, r)));
                }
              }
            }
        }),
        (g._getParentFromElement = function (o) {
          var t,
            a = b.getSelectorFromElement(o);
          return a && (t = document.querySelector(a)), t || o.parentNode;
        }),
        (g._dataApiKeydownHandler = function (a) {
          if (
            (/input|textarea/i.test(a.target.tagName)
              ? !(
                  32 === a.which ||
                  (27 !== a.which &&
                    ((40 !== a.which && 38 !== a.which) ||
                      m(a.target).closest(".dropdown-menu").length))
                )
              : /38|40|27/.test(a.which)) &&
            (a.preventDefault(),
            a.stopPropagation(),
            !this.disabled && !m(this).hasClass("disabled"))
          ) {
            var t = g._getParentFromElement(this),
              e = m(t).hasClass("show");
            if (e && (!e || (27 !== a.which && 32 !== a.which))) {
              var n = [].slice.call(
                t.querySelectorAll(
                  ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)"
                )
              );
              if (0 !== n.length) {
                var i = n.indexOf(a.target);
                38 === a.which && 0 < i && i--,
                  40 === a.which && i < n.length - 1 && i++,
                  0 > i && (i = 0),
                  n[i].focus();
              }
            } else {
              if (27 === a.which) {
                var l = t.querySelector('[data-toggle="dropdown"]');
                m(l).trigger("focus");
              }
              m(this).trigger("click");
            }
          }
        }),
        f(g, null, [
          {
            key: "VERSION",
            get: function () {
              return "4.3.1";
            },
          },
          {
            key: "Default",
            get: function () {
              return O;
            },
          },
          {
            key: "DefaultType",
            get: function () {
              return k;
            },
          },
        ]),
        g
      );
    })();
  m(document)
    .on(
      N.KEYDOWN_DATA_API,
      '[data-toggle="dropdown"]',
      P._dataApiKeydownHandler
    )
    .on(N.KEYDOWN_DATA_API, ".dropdown-menu", P._dataApiKeydownHandler)
    .on(N.CLICK_DATA_API + " " + N.KEYUP_DATA_API, P._clearMenus)
    .on(N.CLICK_DATA_API, '[data-toggle="dropdown"]', function (e) {
      e.preventDefault(),
        e.stopPropagation(),
        P._jQueryInterface.call(m(this), "toggle");
    })
    .on(N.CLICK_DATA_API, ".dropdown form", function (e) {
      e.stopPropagation();
    }),
    (m.fn.dropdown = P._jQueryInterface),
    (m.fn.dropdown.Constructor = P),
    (m.fn.dropdown.noConflict = function () {
      return (m.fn.dropdown = w), P._jQueryInterface;
    });
  var L = m.fn.modal,
    H = {
      backdrop: !0,
      keyboard: !0,
      focus: !0,
      show: !0,
    },
    j = {
      backdrop: "(boolean|string)",
      keyboard: "boolean",
      focus: "boolean",
      show: "boolean",
    },
    R = {
      HIDE: "hide.bs.modal",
      HIDDEN: "hidden.bs.modal",
      SHOW: "show.bs.modal",
      SHOWN: "shown.bs.modal",
      FOCUSIN: "focusin.bs.modal",
      RESIZE: "resize.bs.modal",
      CLICK_DISMISS: "click.dismiss.bs.modal",
      KEYDOWN_DISMISS: "keydown.dismiss.bs.modal",
      MOUSEUP_DISMISS: "mouseup.dismiss.bs.modal",
      MOUSEDOWN_DISMISS: "mousedown.dismiss.bs.modal",
      CLICK_DATA_API: "click.bs.modal.data-api",
    },
    U = (function () {
      function a(n, t) {
        (this._config = this._getConfig(t)),
          (this._element = n),
          (this._dialog = n.querySelector(".modal-dialog")),
          (this._backdrop = null),
          (this._isShown = !1),
          (this._isBodyOverflowing = !1),
          (this._ignoreBackdropClick = !1),
          (this._isTransitioning = !1),
          (this._scrollbarWidth = 0);
      }
      var e = a.prototype;
      return (
        (e.toggle = function (e) {
          return this._isShown ? this.hide() : this.show(e);
        }),
        (e.show = function (o) {
          var a = this;
          if (!this._isShown && !this._isTransitioning) {
            m(this._element).hasClass("fade") && (this._isTransitioning = !0);
            var e = m.Event(R.SHOW, {
              relatedTarget: o,
            });
            m(this._element).trigger(e),
              this._isShown ||
                e.isDefaultPrevented() ||
                ((this._isShown = !0),
                this._checkScrollbar(),
                this._setScrollbar(),
                this._adjustDialog(),
                this._setEscapeEvent(),
                this._setResizeEvent(),
                m(this._element).on(
                  R.CLICK_DISMISS,
                  '[data-dismiss="modal"]',
                  function (e) {
                    return a.hide(e);
                  }
                ),
                m(this._dialog).on(R.MOUSEDOWN_DISMISS, function () {
                  m(a._element).one(R.MOUSEUP_DISMISS, function (e) {
                    m(e.target).is(a._element) && (a._ignoreBackdropClick = !0);
                  });
                }),
                this._showBackdrop(function () {
                  return a._showElement(o);
                }));
          }
        }),
        (e.hide = function (a) {
          var l = this;
          if (
            (a && a.preventDefault(), this._isShown && !this._isTransitioning)
          ) {
            var e = m.Event(R.HIDE);
            if (
              (m(this._element).trigger(e),
              this._isShown && !e.isDefaultPrevented())
            ) {
              this._isShown = !1;
              var t = m(this._element).hasClass("fade");
              if (
                (t && (this._isTransitioning = !0),
                this._setEscapeEvent(),
                this._setResizeEvent(),
                m(document).off(R.FOCUSIN),
                m(this._element).removeClass("show"),
                m(this._element).off(R.CLICK_DISMISS),
                m(this._dialog).off(R.MOUSEDOWN_DISMISS),
                t)
              ) {
                var n = b.getTransitionDurationFromElement(this._element);
                m(this._element)
                  .one(b.TRANSITION_END, function (e) {
                    return l._hideModal(e);
                  })
                  .emulateTransitionEnd(n);
              } else this._hideModal();
            }
          }
        }),
        (e.dispose = function () {
          [window, this._element, this._dialog].forEach(function (e) {
            return m(e).off(".bs.modal");
          }),
            m(document).off(R.FOCUSIN),
            m.removeData(this._element, "bs.modal"),
            (this._config = null),
            (this._element = null),
            (this._dialog = null),
            (this._backdrop = null),
            (this._isShown = null),
            (this._isBodyOverflowing = null),
            (this._ignoreBackdropClick = null),
            (this._isTransitioning = null),
            (this._scrollbarWidth = null);
        }),
        (e.handleUpdate = function () {
          this._adjustDialog();
        }),
        (e._getConfig = function (e) {
          return (e = s({}, H, e)), b.typeCheckConfig("modal", e, j), e;
        }),
        (e._showElement = function (a) {
          var t = this,
            e = m(this._element).hasClass("fade");
          (this._element.parentNode &&
            this._element.parentNode.nodeType === Node.ELEMENT_NODE) ||
            document.body.appendChild(this._element),
            (this._element.style.display = "block"),
            this._element.removeAttribute("aria-hidden"),
            this._element.setAttribute("aria-modal", !0),
            m(this._dialog).hasClass("modal-dialog-scrollable")
              ? (this._dialog.querySelector(".modal-body").scrollTop = 0)
              : (this._element.scrollTop = 0),
            e && b.reflow(this._element),
            m(this._element).addClass("show"),
            this._config.focus && this._enforceFocus();
          var n = m.Event(R.SHOWN, {
              relatedTarget: a,
            }),
            i = function () {
              t._config.focus && t._element.focus(),
                (t._isTransitioning = !1),
                m(t._element).trigger(n);
            };
          if (e) {
            var o = b.getTransitionDurationFromElement(this._dialog);
            m(this._dialog).one(b.TRANSITION_END, i).emulateTransitionEnd(o);
          } else i();
        }),
        (e._enforceFocus = function () {
          var n = this;
          m(document)
            .off(R.FOCUSIN)
            .on(R.FOCUSIN, function (e) {
              document !== e.target &&
                n._element !== e.target &&
                0 === m(n._element).has(e.target).length &&
                n._element.focus();
            });
        }),
        (e._setEscapeEvent = function () {
          var n = this;
          this._isShown && this._config.keyboard
            ? m(this._element).on(R.KEYDOWN_DISMISS, function (e) {
                27 === e.which && (e.preventDefault(), n.hide());
              })
            : this._isShown || m(this._element).off(R.KEYDOWN_DISMISS);
        }),
        (e._setResizeEvent = function () {
          var n = this;
          this._isShown
            ? m(window).on(R.RESIZE, function (e) {
                return n.handleUpdate(e);
              })
            : m(window).off(R.RESIZE);
        }),
        (e._hideModal = function () {
          var e = this;
          (this._element.style.display = "none"),
            this._element.setAttribute("aria-hidden", !0),
            this._element.removeAttribute("aria-modal"),
            (this._isTransitioning = !1),
            this._showBackdrop(function () {
              m(document.body).removeClass("modal-open"),
                e._resetAdjustments(),
                e._resetScrollbar(),
                m(e._element).trigger(R.HIDDEN);
            });
        }),
        (e._removeBackdrop = function () {
          this._backdrop &&
            (m(this._backdrop).remove(), (this._backdrop = null));
        }),
        (e._showBackdrop = function (a) {
          var l = this,
            e = m(this._element).hasClass("fade") ? "fade" : "";
          if (this._isShown && this._config.backdrop) {
            if (
              ((this._backdrop = document.createElement("div")),
              (this._backdrop.className = "modal-backdrop"),
              e && this._backdrop.classList.add(e),
              m(this._backdrop).appendTo(document.body),
              m(this._element).on(R.CLICK_DISMISS, function (e) {
                l._ignoreBackdropClick
                  ? (l._ignoreBackdropClick = !1)
                  : e.target === e.currentTarget &&
                    ("static" === l._config.backdrop
                      ? l._element.focus()
                      : l.hide());
              }),
              e && b.reflow(this._backdrop),
              m(this._backdrop).addClass("show"),
              !a)
            )
              return;
            if (!e) return void a();
            var t = b.getTransitionDurationFromElement(this._backdrop);
            m(this._backdrop).one(b.TRANSITION_END, a).emulateTransitionEnd(t);
          } else if (!this._isShown && this._backdrop) {
            m(this._backdrop).removeClass("show");
            var n = function () {
              l._removeBackdrop(), a && a();
            };
            if (m(this._element).hasClass("fade")) {
              var o = b.getTransitionDurationFromElement(this._backdrop);
              m(this._backdrop)
                .one(b.TRANSITION_END, n)
                .emulateTransitionEnd(o);
            } else n();
          } else a && a();
        }),
        (e._adjustDialog = function () {
          var e =
            this._element.scrollHeight > document.documentElement.clientHeight;
          !this._isBodyOverflowing &&
            e &&
            (this._element.style.paddingLeft = this._scrollbarWidth + "px"),
            this._isBodyOverflowing &&
              !e &&
              (this._element.style.paddingRight = this._scrollbarWidth + "px");
        }),
        (e._resetAdjustments = function () {
          (this._element.style.paddingLeft = ""),
            (this._element.style.paddingRight = "");
        }),
        (e._checkScrollbar = function () {
          var e = document.body.getBoundingClientRect();
          (this._isBodyOverflowing = e.left + e.right < window.innerWidth),
            (this._scrollbarWidth = this._getScrollbarWidth());
        }),
        (e._setScrollbar = function () {
          var a = this;
          if (this._isBodyOverflowing) {
            var o = [].slice.call(
                document.querySelectorAll(
                  ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top"
                )
              ),
              t = [].slice.call(document.querySelectorAll(".sticky-top"));
            m(o).each(function (o, t) {
              var e = t.style.paddingRight,
                n = m(t).css("padding-right");
              m(t)
                .data("padding-right", e)
                .css("padding-right", parseFloat(n) + a._scrollbarWidth + "px");
            }),
              m(t).each(function (o, t) {
                var e = t.style.marginRight,
                  n = m(t).css("margin-right");
                m(t)
                  .data("margin-right", e)
                  .css(
                    "margin-right",
                    parseFloat(n) - a._scrollbarWidth + "px"
                  );
              });
            var e = document.body.style.paddingRight,
              n = m(document.body).css("padding-right");
            m(document.body)
              .data("padding-right", e)
              .css(
                "padding-right",
                parseFloat(n) + this._scrollbarWidth + "px"
              );
          }
          m(document.body).addClass("modal-open");
        }),
        (e._resetScrollbar = function () {
          var o = [].slice.call(
            document.querySelectorAll(
              ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top"
            )
          );
          m(o).each(function (o, t) {
            var e = m(t).data("padding-right");
            m(t).removeData("padding-right"), (t.style.paddingRight = e || "");
          });
          var t = [].slice.call(document.querySelectorAll(".sticky-top"));
          m(t).each(function (o, t) {
            var e = m(t).data("margin-right");
            "undefined" != typeof e &&
              m(t).css("margin-right", e).removeData("margin-right");
          });
          var e = m(document.body).data("padding-right");
          m(document.body).removeData("padding-right"),
            (document.body.style.paddingRight = e || "");
        }),
        (e._getScrollbarWidth = function () {
          var n = document.createElement("div");
          (n.className = "modal-scrollbar-measure"),
            document.body.appendChild(n);
          var t = n.getBoundingClientRect().width - n.clientWidth;
          return document.body.removeChild(n), t;
        }),
        (a._jQueryInterface = function (o, n) {
          return this.each(function () {
            var i = m(this).data("bs.modal"),
              l = s({}, H, m(this).data(), "object" == typeof o && o ? o : {});
            if (
              (i || ((i = new a(this, l)), m(this).data("bs.modal", i)),
              "string" == typeof o)
            ) {
              if ("undefined" == typeof i[o])
                throw new TypeError('No method named "' + o + '"');
              i[o](n);
            } else l.show && i.show(n);
          });
        }),
        f(a, null, [
          {
            key: "VERSION",
            get: function () {
              return "4.3.1";
            },
          },
          {
            key: "Default",
            get: function () {
              return H;
            },
          },
        ]),
        a
      );
    })();
  m(document).on(R.CLICK_DATA_API, '[data-toggle="modal"]', function (a) {
    var t,
      l = this,
      n = b.getSelectorFromElement(this);
    n && (t = document.querySelector(n));
    var i = m(t).data("bs.modal")
      ? "toggle"
      : s({}, m(t).data(), m(this).data());
    ("A" !== this.tagName && "AREA" !== this.tagName) || a.preventDefault();
    var o = m(t).one(R.SHOW, function (e) {
      e.isDefaultPrevented() ||
        o.one(R.HIDDEN, function () {
          m(l).is(":visible") && l.focus();
        });
    });
    U._jQueryInterface.call(m(t), i, this);
  }),
    (m.fn.modal = U._jQueryInterface),
    (m.fn.modal.Constructor = U),
    (m.fn.modal.noConflict = function () {
      return (m.fn.modal = L), U._jQueryInterface;
    });
  var W = [
      "background",
      "cite",
      "href",
      "itemtype",
      "longdesc",
      "poster",
      "src",
      "xlink:href",
    ],
    x = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,
    F = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i,
    q = "tooltip",
    M = "bs.tooltip",
    K = "." + M,
    Q = m.fn[q],
    B = "bs-tooltip",
    V = new RegExp("(^|\\s)" + B + "\\S+", "g"),
    Y = ["sanitize", "whiteList", "sanitizeFn"],
    z = {
      animation: "boolean",
      template: "string",
      title: "(string|element|function)",
      trigger: "string",
      delay: "(number|object)",
      html: "boolean",
      selector: "(string|boolean)",
      placement: "(string|function)",
      offset: "(number|string|function)",
      container: "(string|element|boolean)",
      fallbackPlacement: "(string|array)",
      boundary: "(string|element)",
      sanitize: "boolean",
      sanitizeFn: "(null|function)",
      whiteList: "object",
    },
    X = {
      AUTO: "auto",
      TOP: "top",
      RIGHT: "right",
      BOTTOM: "bottom",
      LEFT: "left",
    },
    G = {
      animation: !0,
      template:
        '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',
      trigger: "hover focus",
      title: "",
      delay: 0,
      html: !1,
      selector: !1,
      placement: "top",
      offset: 0,
      container: !1,
      fallbackPlacement: "flip",
      boundary: "scrollParent",
      sanitize: !0,
      sanitizeFn: null,
      whiteList: {
        "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i],
        a: ["target", "href", "title", "rel"],
        area: [],
        b: [],
        br: [],
        col: [],
        code: [],
        div: [],
        em: [],
        hr: [],
        h1: [],
        h2: [],
        h3: [],
        h4: [],
        h5: [],
        h6: [],
        i: [],
        img: ["src", "alt", "title", "width", "height"],
        li: [],
        ol: [],
        p: [],
        pre: [],
        s: [],
        small: [],
        span: [],
        sub: [],
        sup: [],
        strong: [],
        u: [],
        ul: [],
      },
    },
    J = "show",
    Z = "out",
    $ = {
      HIDE: "hide" + K,
      HIDDEN: "hidden" + K,
      SHOW: "show" + K,
      SHOWN: "shown" + K,
      INSERTED: "inserted" + K,
      CLICK: "click" + K,
      FOCUSIN: "focusin" + K,
      FOCUSOUT: "focusout" + K,
      MOUSEENTER: "mouseenter" + K,
      MOUSELEAVE: "mouseleave" + K,
    },
    ee = "fade",
    te = "show",
    ne = "hover",
    oe = "focus",
    ae = (function () {
      function e(n, t) {
        if ("undefined" == typeof d)
          throw new TypeError(
            "Bootstrap's tooltips require Popper.js (https://popper.js.org/)"
          );
        (this._isEnabled = !0),
          (this._timeout = 0),
          (this._hoverState = ""),
          (this._activeTrigger = {}),
          (this._popper = null),
          (this.element = n),
          (this.config = this._getConfig(t)),
          (this.tip = null),
          this._setListeners();
      }
      var o = e.prototype;
      return (
        (o.enable = function () {
          this._isEnabled = !0;
        }),
        (o.disable = function () {
          this._isEnabled = !1;
        }),
        (o.toggleEnabled = function () {
          this._isEnabled = !this._isEnabled;
        }),
        (o.toggle = function (o) {
          if (this._isEnabled)
            if (o) {
              var t = this.constructor.DATA_KEY,
                e = m(o.currentTarget).data(t);
              e ||
                ((e = new this.constructor(
                  o.currentTarget,
                  this._getDelegateConfig()
                )),
                m(o.currentTarget).data(t, e)),
                (e._activeTrigger.click = !e._activeTrigger.click),
                e._isWithActiveTrigger()
                  ? e._enter(null, e)
                  : e._leave(null, e);
            } else {
              if (m(this.getTipElement()).hasClass(te))
                return void this._leave(null, this);
              this._enter(null, this);
            }
        }),
        (o.dispose = function () {
          clearTimeout(this._timeout),
            m.removeData(this.element, this.constructor.DATA_KEY),
            m(this.element).off(this.constructor.EVENT_KEY),
            m(this.element).closest(".modal").off("hide.bs.modal"),
            this.tip && m(this.tip).remove(),
            (this._isEnabled = null),
            (this._timeout = null),
            (this._hoverState = null),
            (this._activeTrigger = null) !== this._popper &&
              this._popper.destroy(),
            (this._popper = null),
            (this.element = null),
            (this.config = null),
            (this.tip = null);
        }),
        (o.show = function () {
          var g = this;
          if ("none" === m(this.element).css("display"))
            throw new Error("Please use show on visible elements");
          var e = m.Event(this.constructor.Event.SHOW);
          if (this.isWithContent() && this._isEnabled) {
            m(this.element).trigger(e);
            var t = b.findShadowRoot(this.element),
              n = m.contains(
                null === t ? this.element.ownerDocument.documentElement : t,
                this.element
              );
            if (e.isDefaultPrevented() || !n) return;
            var i = this.getTipElement(),
              o = b.getUID(this.constructor.NAME);
            i.setAttribute("id", o),
              this.element.setAttribute("aria-describedby", o),
              this.setContent(),
              this.config.animation && m(i).addClass(ee);
            var r =
                "function" == typeof this.config.placement
                  ? this.config.placement.call(this, i, this.element)
                  : this.config.placement,
              s = this._getAttachment(r);
            this.addAttachmentClass(s);
            var a = this._getContainer();
            m(i).data(this.constructor.DATA_KEY, this),
              m.contains(
                this.element.ownerDocument.documentElement,
                this.tip
              ) || m(i).appendTo(a),
              m(this.element).trigger(this.constructor.Event.INSERTED),
              (this._popper = new d(this.element, i, {
                placement: s,
                modifiers: {
                  offset: this._getOffset(),
                  flip: {
                    behavior: this.config.fallbackPlacement,
                  },
                  arrow: {
                    element: ".arrow",
                  },
                  preventOverflow: {
                    boundariesElement: this.config.boundary,
                  },
                },
                onCreate: function (e) {
                  e.originalPlacement !== e.placement &&
                    g._handlePopperPlacementChange(e);
                },
                onUpdate: function (e) {
                  return g._handlePopperPlacementChange(e);
                },
              })),
              m(i).addClass(te),
              "ontouchstart" in document.documentElement &&
                m(document.body).children().on("mouseover", null, m.noop);
            var l = function () {
              g.config.animation && g._fixTransition();
              var e = g._hoverState;
              (g._hoverState = null),
                m(g.element).trigger(g.constructor.Event.SHOWN),
                e === Z && g._leave(null, g);
            };
            if (m(this.tip).hasClass(ee)) {
              var c = b.getTransitionDurationFromElement(this.tip);
              m(this.tip).one(b.TRANSITION_END, l).emulateTransitionEnd(c);
            } else l();
          }
        }),
        (o.hide = function (a) {
          var t = this,
            e = this.getTipElement(),
            n = m.Event(this.constructor.Event.HIDE),
            i = function () {
              t._hoverState !== J &&
                e.parentNode &&
                e.parentNode.removeChild(e),
                t._cleanTipClass(),
                t.element.removeAttribute("aria-describedby"),
                m(t.element).trigger(t.constructor.Event.HIDDEN),
                null !== t._popper && t._popper.destroy(),
                a && a();
            };
          if ((m(this.element).trigger(n), !n.isDefaultPrevented())) {
            if (
              (m(e).removeClass(te),
              "ontouchstart" in document.documentElement &&
                m(document.body).children().off("mouseover", null, m.noop),
              (this._activeTrigger["click"] = !1),
              (this._activeTrigger[oe] = !1),
              (this._activeTrigger[ne] = !1),
              m(this.tip).hasClass(ee))
            ) {
              var o = b.getTransitionDurationFromElement(e);
              m(e).one(b.TRANSITION_END, i).emulateTransitionEnd(o);
            } else i();
            this._hoverState = "";
          }
        }),
        (o.update = function () {
          null !== this._popper && this._popper.scheduleUpdate();
        }),
        (o.isWithContent = function () {
          return !!this.getTitle();
        }),
        (o.addAttachmentClass = function (e) {
          m(this.getTipElement()).addClass(B + "-" + e);
        }),
        (o.getTipElement = function () {
          return (this.tip = this.tip || m(this.config.template)[0]), this.tip;
        }),
        (o.setContent = function () {
          var e = this.getTipElement();
          this.setElementContent(
            m(e.querySelectorAll(".tooltip-inner")),
            this.getTitle()
          ),
            m(e).removeClass(ee + " " + te);
        }),
        (o.setElementContent = function (o, t) {
          "object" == typeof t && (t.nodeType || t.jquery)
            ? this.config.html
              ? m(t).parent().is(o) || o.empty().append(t)
              : o.text(m(t).text())
            : this.config.html
            ? (this.config.sanitize &&
                (t = n(t, this.config.whiteList, this.config.sanitizeFn)),
              o.html(t))
            : o.text(t);
        }),
        (o.getTitle = function () {
          var e = this.element.getAttribute("data-original-title");
          return (
            e ||
              (e =
                "function" == typeof this.config.title
                  ? this.config.title.call(this.element)
                  : this.config.title),
            e
          );
        }),
        (o._getOffset = function () {
          var n = this,
            e = {};
          return (
            "function" == typeof this.config.offset
              ? (e.fn = function (e) {
                  return (
                    (e.offsets = s(
                      {},
                      e.offsets,
                      n.config.offset(e.offsets, n.element) || {}
                    )),
                    e
                  );
                })
              : (e.offset = this.config.offset),
            e
          );
        }),
        (o._getContainer = function () {
          return !1 === this.config.container
            ? document.body
            : b.isElement(this.config.container)
            ? m(this.config.container)
            : m(document).find(this.config.container);
        }),
        (o._getAttachment = function (e) {
          return X[e.toUpperCase()];
        }),
        (o._setListeners = function () {
          var o = this;
          this.config.trigger.split(" ").forEach(function (a) {
            if ("click" === a)
              m(o.element).on(
                o.constructor.Event.CLICK,
                o.config.selector,
                function (e) {
                  return o.toggle(e);
                }
              );
            else if (a !== "manual") {
              var t =
                  a === ne
                    ? o.constructor.Event.MOUSEENTER
                    : o.constructor.Event.FOCUSIN,
                e =
                  a === ne
                    ? o.constructor.Event.MOUSELEAVE
                    : o.constructor.Event.FOCUSOUT;
              m(o.element)
                .on(t, o.config.selector, function (e) {
                  return o._enter(e);
                })
                .on(e, o.config.selector, function (e) {
                  return o._leave(e);
                });
            }
          }),
            m(this.element)
              .closest(".modal")
              .on("hide.bs.modal", function () {
                o.element && o.hide();
              }),
            this.config.selector
              ? (this.config = s({}, this.config, {
                  trigger: "manual",
                  selector: "",
                }))
              : this._fixTitle();
        }),
        (o._fixTitle = function () {
          var e = typeof this.element.getAttribute("data-original-title");
          (this.element.getAttribute("title") || "string" !== e) &&
            (this.element.setAttribute(
              "data-original-title",
              this.element.getAttribute("title") || ""
            ),
            this.element.setAttribute("title", ""));
        }),
        (o._enter = function (o, t) {
          var a = this.constructor.DATA_KEY;
          (t = t || m(o.currentTarget).data(a)) ||
            ((t = new this.constructor(
              o.currentTarget,
              this._getDelegateConfig()
            )),
            m(o.currentTarget).data(a, t)),
            o && (t._activeTrigger["focusin" === o.type ? oe : ne] = !0),
            m(t.getTipElement()).hasClass(te) || t._hoverState === J
              ? (t._hoverState = J)
              : (clearTimeout(t._timeout),
                (t._hoverState = J),
                t.config.delay && t.config.delay.show
                  ? (t._timeout = setTimeout(function () {
                      t._hoverState === J && t.show();
                    }, t.config.delay.show))
                  : t.show());
        }),
        (o._leave = function (o, t) {
          var a = this.constructor.DATA_KEY;
          (t = t || m(o.currentTarget).data(a)) ||
            ((t = new this.constructor(
              o.currentTarget,
              this._getDelegateConfig()
            )),
            m(o.currentTarget).data(a, t)),
            o && (t._activeTrigger["focusout" === o.type ? oe : ne] = !1),
            t._isWithActiveTrigger() ||
              (clearTimeout(t._timeout),
              (t._hoverState = Z),
              t.config.delay && t.config.delay.hide
                ? (t._timeout = setTimeout(function () {
                    t._hoverState === Z && t.hide();
                  }, t.config.delay.hide))
                : t.hide());
        }),
        (o._isWithActiveTrigger = function () {
          for (var e in this._activeTrigger)
            if (this._activeTrigger[e]) return !0;
          return !1;
        }),
        (o._getConfig = function (o) {
          var a = m(this.element).data();
          return (
            Object.keys(a).forEach(function (e) {
              -1 !== Y.indexOf(e) && delete a[e];
            }),
            "number" ==
              typeof (o = s(
                {},
                this.constructor.Default,
                a,
                "object" == typeof o && o ? o : {}
              )).delay &&
              (o.delay = {
                show: o.delay,
                hide: o.delay,
              }),
            "number" == typeof o.title && (o.title = o.title.toString()),
            "number" == typeof o.content && (o.content = o.content.toString()),
            b.typeCheckConfig(q, o, this.constructor.DefaultType),
            o.sanitize &&
              (o.template = n(o.template, o.whiteList, o.sanitizeFn)),
            o
          );
        }),
        (o._getDelegateConfig = function () {
          var n = {};
          if (this.config)
            for (var t in this.config)
              this.constructor.Default[t] !== this.config[t] &&
                (n[t] = this.config[t]);
          return n;
        }),
        (o._cleanTipClass = function () {
          var n = m(this.getTipElement()),
            t = n.attr("class").match(V);
          null !== t && t.length && n.removeClass(t.join(""));
        }),
        (o._handlePopperPlacementChange = function (n) {
          var t = n.instance;
          (this.tip = t.popper),
            this._cleanTipClass(),
            this.addAttachmentClass(this._getAttachment(n.placement));
        }),
        (o._fixTransition = function () {
          var n = this.getTipElement(),
            t = this.config.animation;
          null === n.getAttribute("x-placement") &&
            (m(n).removeClass(ee),
            (this.config.animation = !1),
            this.hide(),
            this.show(),
            (this.config.animation = t));
        }),
        (e._jQueryInterface = function (o) {
          return this.each(function () {
            var n = m(this).data(M);
            if (
              (n || !/dispose|hide/.test(o)) &&
              (n ||
                ((n = new e(this, "object" == typeof o && o)),
                m(this).data(M, n)),
              "string" == typeof o)
            ) {
              if ("undefined" == typeof n[o])
                throw new TypeError('No method named "' + o + '"');
              n[o]();
            }
          });
        }),
        f(e, null, [
          {
            key: "VERSION",
            get: function () {
              return "4.3.1";
            },
          },
          {
            key: "Default",
            get: function () {
              return G;
            },
          },
          {
            key: "NAME",
            get: function () {
              return q;
            },
          },
          {
            key: "DATA_KEY",
            get: function () {
              return M;
            },
          },
          {
            key: "Event",
            get: function () {
              return $;
            },
          },
          {
            key: "EVENT_KEY",
            get: function () {
              return K;
            },
          },
          {
            key: "DefaultType",
            get: function () {
              return z;
            },
          },
        ]),
        e
      );
    })();
  (m.fn[q] = ae._jQueryInterface),
    (m.fn[q].Constructor = ae),
    (m.fn[q].noConflict = function () {
      return (m.fn[q] = Q), ae._jQueryInterface;
    });
  var ie = m.fn.popover,
    le = s({}, ae.Default, {
      placement: "right",
      trigger: "click",
      content: "",
      template:
        '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
    }),
    re = s({}, ae.DefaultType, {
      content: "(string|element|function)",
    }),
    se = {
      HIDE: "hide.bs.popover",
      HIDDEN: "hidden.bs.popover",
      SHOW: "show.bs.popover",
      SHOWN: "shown.bs.popover",
      INSERTED: "inserted.bs.popover",
      CLICK: "click.bs.popover",
      FOCUSIN: "focusin.bs.popover",
      FOCUSOUT: "focusout.bs.popover",
      MOUSEENTER: "mouseenter.bs.popover",
      MOUSELEAVE: "mouseleave.bs.popover",
    },
    de = (function (a) {
      function l() {
        return a.apply(this, arguments) || this;
      }
      var t, i;
      (i = a),
        ((t = l).prototype = Object.create(i.prototype)),
        ((t.prototype.constructor = t).__proto__ = i);
      var r = l.prototype;
      return (
        (r.isWithContent = function () {
          return this.getTitle() || this._getContent();
        }),
        (r.addAttachmentClass = function (e) {
          m(this.getTipElement()).addClass("bs-popover-" + e);
        }),
        (r.getTipElement = function () {
          return (this.tip = this.tip || m(this.config.template)[0]), this.tip;
        }),
        (r.setContent = function () {
          var n = m(this.getTipElement());
          this.setElementContent(n.find(".popover-header"), this.getTitle());
          var t = this._getContent();
          "function" == typeof t && (t = t.call(this.element)),
            this.setElementContent(n.find(".popover-body"), t),
            n.removeClass("fade show");
        }),
        (r._getContent = function () {
          return (
            this.element.getAttribute("data-content") || this.config.content
          );
        }),
        (r._cleanTipClass = function () {
          var n = m(this.getTipElement()),
            t = n.attr("class").match(/(^|\s)bs-popover\S+/g);
          null !== t && 0 < t.length && n.removeClass(t.join(""));
        }),
        (l._jQueryInterface = function (o) {
          return this.each(function () {
            var n = m(this).data("bs.popover"),
              a = "object" == typeof o ? o : null;
            if (
              (n || !/dispose|hide/.test(o)) &&
              (n || ((n = new l(this, a)), m(this).data("bs.popover", n)),
              "string" == typeof o)
            ) {
              if ("undefined" == typeof n[o])
                throw new TypeError('No method named "' + o + '"');
              n[o]();
            }
          });
        }),
        f(l, null, [
          {
            key: "VERSION",
            get: function () {
              return "4.3.1";
            },
          },
          {
            key: "Default",
            get: function () {
              return le;
            },
          },
          {
            key: "NAME",
            get: function () {
              return "popover";
            },
          },
          {
            key: "DATA_KEY",
            get: function () {
              return "bs.popover";
            },
          },
          {
            key: "Event",
            get: function () {
              return se;
            },
          },
          {
            key: "EVENT_KEY",
            get: function () {
              return ".bs.popover";
            },
          },
          {
            key: "DefaultType",
            get: function () {
              return re;
            },
          },
        ]),
        l
      );
    })(ae);
  (m.fn.popover = de._jQueryInterface),
    (m.fn.popover.Constructor = de),
    (m.fn.popover.noConflict = function () {
      return (m.fn.popover = ie), de._jQueryInterface;
    });
  var ce = m.fn.scrollspy,
    ge = {
      offset: 10,
      method: "auto",
      target: "",
    },
    _e = {
      offset: "number",
      method: "string",
      target: "(string|element)",
    },
    me = {
      ACTIVATE: "activate.bs.scrollspy",
      SCROLL: "scroll.bs.scrollspy",
      LOAD_DATA_API: "load.bs.scrollspy.data-api",
    },
    fe = (function () {
      function o(o, t) {
        var e = this;
        (this._element = o),
          (this._scrollElement = "BODY" === o.tagName ? window : o),
          (this._config = this._getConfig(t)),
          (this._selector =
            this._config.target +
            " " +
            ".nav-link" +
            "," +
            this._config.target +
            " " +
            ".list-group-item" +
            "," +
            this._config.target +
            " " +
            ".dropdown-item"),
          (this._offsets = []),
          (this._targets = []),
          (this._activeTarget = null),
          (this._scrollHeight = 0),
          m(this._scrollElement).on(me.SCROLL, function (n) {
            return e._process(n);
          }),
          this.refresh(),
          this._process();
      }
      var e = o.prototype;
      return (
        (e.refresh = function () {
          var n = this,
            e =
              this._scrollElement === this._scrollElement.window
                ? "offset"
                : "position",
            t = "auto" === this._config.method ? e : this._config.method,
            o = t === "position" ? this._getScrollTop() : 0;
          (this._offsets = []),
            (this._targets = []),
            (this._scrollHeight = this._getScrollHeight()),
            [].slice
              .call(document.querySelectorAll(this._selector))
              .map(function (a) {
                var l,
                  r = b.getSelectorFromElement(a);
                if ((r && (l = document.querySelector(r)), l)) {
                  var n = l.getBoundingClientRect();
                  if (n.width || n.height) return [m(l)[t]().top + o, r];
                }
                return null;
              })
              .filter(function (e) {
                return e;
              })
              .sort(function (n, t) {
                return n[0] - t[0];
              })
              .forEach(function (e) {
                n._offsets.push(e[0]), n._targets.push(e[1]);
              });
        }),
        (e.dispose = function () {
          m.removeData(this._element, "bs.scrollspy"),
            m(this._scrollElement).off(".bs.scrollspy"),
            (this._element = null),
            (this._scrollElement = null),
            (this._config = null),
            (this._selector = null),
            (this._offsets = null),
            (this._targets = null),
            (this._activeTarget = null),
            (this._scrollHeight = null);
        }),
        (e._getConfig = function (n) {
          if (
            "string" !=
            typeof (n = s({}, ge, "object" == typeof n && n ? n : {})).target
          ) {
            var o = m(n.target).attr("id");
            o || ((o = b.getUID("scrollspy")), m(n.target).attr("id", o)),
              (n.target = "#" + o);
          }
          return b.typeCheckConfig("scrollspy", n, _e), n;
        }),
        (e._getScrollTop = function () {
          return this._scrollElement === window
            ? this._scrollElement.pageYOffset
            : this._scrollElement.scrollTop;
        }),
        (e._getScrollHeight = function () {
          return (
            this._scrollElement.scrollHeight ||
            Math.max(
              document.body.scrollHeight,
              document.documentElement.scrollHeight
            )
          );
        }),
        (e._getOffsetHeight = function () {
          return this._scrollElement === window
            ? window.innerHeight
            : this._scrollElement.getBoundingClientRect().height;
        }),
        (e._process = function () {
          var a = this._getScrollTop() + this._config.offset,
            t = this._getScrollHeight(),
            e = this._config.offset + t - this._getOffsetHeight();
          if ((this._scrollHeight !== t && this.refresh(), e <= a)) {
            var n = this._targets[this._targets.length - 1];
            this._activeTarget !== n && this._activate(n);
          } else {
            if (
              this._activeTarget &&
              a < this._offsets[0] &&
              0 < this._offsets[0]
            )
              return (this._activeTarget = null), void this._clear();
            for (var i = this._offsets.length; i--; )
              this._activeTarget !== this._targets[i] &&
                a >= this._offsets[i] &&
                ("undefined" == typeof this._offsets[i + 1] ||
                  a < this._offsets[i + 1]) &&
                this._activate(this._targets[i]);
          }
        }),
        (e._activate = function (o) {
          (this._activeTarget = o), this._clear();
          var e = this._selector.split(",").map(function (e) {
              return (
                e + '[data-target="' + o + '"],' + e + '[href="' + o + '"]'
              );
            }),
            t = m([].slice.call(document.querySelectorAll(e.join(","))));
          t.hasClass("dropdown-item")
            ? (t
                .closest(".dropdown")
                .find(".dropdown-toggle")
                .addClass("active"),
              t.addClass("active"))
            : (t.addClass("active"),
              t
                .parents(".nav, .list-group")
                .prev(".nav-link, .list-group-item")
                .addClass("active"),
              t
                .parents(".nav, .list-group")
                .prev(".nav-item")
                .children(".nav-link")
                .addClass("active")),
            m(this._scrollElement).trigger(me.ACTIVATE, {
              relatedTarget: o,
            });
        }),
        (e._clear = function () {
          [].slice
            .call(document.querySelectorAll(this._selector))
            .filter(function (e) {
              return e.classList.contains("active");
            })
            .forEach(function (e) {
              return e.classList.remove("active");
            });
        }),
        (o._jQueryInterface = function (n) {
          return this.each(function () {
            var e = m(this).data("bs.scrollspy");
            if (
              (e ||
                ((e = new o(this, "object" == typeof n && n)),
                m(this).data("bs.scrollspy", e)),
              "string" == typeof n)
            ) {
              if ("undefined" == typeof e[n])
                throw new TypeError('No method named "' + n + '"');
              e[n]();
            }
          });
        }),
        f(o, null, [
          {
            key: "VERSION",
            get: function () {
              return "4.3.1";
            },
          },
          {
            key: "Default",
            get: function () {
              return ge;
            },
          },
        ]),
        o
      );
    })();
  m(window).on(me.LOAD_DATA_API, function () {
    for (
      var o,
        a = [].slice.call(document.querySelectorAll('[data-spy="scroll"]')),
        t = a.length;
      t--;

    )
      (o = m(a[t])), fe._jQueryInterface.call(o, o.data());
  }),
    (m.fn.scrollspy = fe._jQueryInterface),
    (m.fn.scrollspy.Constructor = fe),
    (m.fn.scrollspy.noConflict = function () {
      return (m.fn.scrollspy = ce), fe._jQueryInterface;
    });
  var ue = m.fn.tab,
    pe = {
      HIDE: "hide.bs.tab",
      HIDDEN: "hidden.bs.tab",
      SHOW: "show.bs.tab",
      SHOWN: "shown.bs.tab",
      CLICK_DATA_API: "click.bs.tab.data-api",
    },
    he = (function () {
      function o(e) {
        this._element = e;
      }
      var e = o.prototype;
      return (
        (e.show = function () {
          var d = this;
          if (
            !(
              (this._element.parentNode &&
                this._element.parentNode.nodeType === Node.ELEMENT_NODE &&
                m(this._element).hasClass("active")) ||
              m(this._element).hasClass("disabled")
            )
          ) {
            var n,
              c,
              g = m(this._element).closest(".nav, .list-group")[0],
              e = b.getSelectorFromElement(this._element);
            if (g) {
              var o =
                "UL" === g.nodeName || "OL" === g.nodeName
                  ? "> li > .active"
                  : ".active";
              c = (c = m.makeArray(m(g).find(o)))[c.length - 1];
            }
            var r = m.Event(pe.HIDE, {
                relatedTarget: this._element,
              }),
              s = m.Event(pe.SHOW, {
                relatedTarget: c,
              });
            if (
              (c && m(c).trigger(r),
              m(this._element).trigger(s),
              !s.isDefaultPrevented() && !r.isDefaultPrevented())
            ) {
              e && (n = document.querySelector(e)),
                this._activate(this._element, g);
              var a = function () {
                var n = m.Event(pe.HIDDEN, {
                    relatedTarget: d._element,
                  }),
                  t = m.Event(pe.SHOWN, {
                    relatedTarget: c,
                  });
                m(c).trigger(n), m(d._element).trigger(t);
              };
              n ? this._activate(n, n.parentNode, a) : a();
            }
          }
        }),
        (e.dispose = function () {
          m.removeData(this._element, "bs.tab"), (this._element = null);
        }),
        (e._activate = function (l, t, e) {
          var n = this,
            i = (t && ("UL" === t.nodeName || "OL" === t.nodeName)
              ? m(t).find("> li > .active")
              : m(t).children(".active"))[0],
            o = e && i && m(i).hasClass("fade"),
            r = function () {
              return n._transitionComplete(l, i, e);
            };
          if (i && o) {
            var s = b.getTransitionDurationFromElement(i);
            m(i)
              .removeClass("show")
              .one(b.TRANSITION_END, r)
              .emulateTransitionEnd(s);
          } else r();
        }),
        (e._transitionComplete = function (a, t, e) {
          if (t) {
            m(t).removeClass("active");
            var n = m(t.parentNode).find("> .dropdown-menu .active")[0];
            n && m(n).removeClass("active"),
              "tab" === t.getAttribute("role") &&
                t.setAttribute("aria-selected", !1);
          }
          if (
            (m(a).addClass("active"),
            "tab" === a.getAttribute("role") &&
              a.setAttribute("aria-selected", !0),
            b.reflow(a),
            a.classList.contains("fade") && a.classList.add("show"),
            a.parentNode && m(a.parentNode).hasClass("dropdown-menu"))
          ) {
            var i = m(a).closest(".dropdown")[0];
            if (i) {
              var o = [].slice.call(i.querySelectorAll(".dropdown-toggle"));
              m(o).addClass("active");
            }
            a.setAttribute("aria-expanded", !0);
          }
          e && e();
        }),
        (o._jQueryInterface = function (a) {
          return this.each(function () {
            var n = m(this),
              t = n.data("bs.tab");
            if (
              (t || ((t = new o(this)), n.data("bs.tab", t)),
              "string" == typeof a)
            ) {
              if ("undefined" == typeof t[a])
                throw new TypeError('No method named "' + a + '"');
              t[a]();
            }
          });
        }),
        f(o, null, [
          {
            key: "VERSION",
            get: function () {
              return "4.3.1";
            },
          },
        ]),
        o
      );
    })();
  m(document).on(
    pe.CLICK_DATA_API,
    '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',
    function (e) {
      e.preventDefault(), he._jQueryInterface.call(m(this), "show");
    }
  ),
    (m.fn.tab = he._jQueryInterface),
    (m.fn.tab.Constructor = he),
    (m.fn.tab.noConflict = function () {
      return (m.fn.tab = ue), he._jQueryInterface;
    });
  var be = m.fn.toast,
    ve = {
      CLICK_DISMISS: "click.dismiss.bs.toast",
      HIDE: "hide.bs.toast",
      HIDDEN: "hidden.bs.toast",
      SHOW: "show.bs.toast",
      SHOWN: "shown.bs.toast",
    },
    Ee = {
      animation: "boolean",
      autohide: "boolean",
      delay: "number",
    },
    ye = {
      animation: !0,
      autohide: !0,
      delay: 500,
    },
    Ce = (function () {
      function o(n, t) {
        (this._element = n),
          (this._config = this._getConfig(t)),
          (this._timeout = null),
          this._setListeners();
      }
      var e = o.prototype;
      return (
        (e.show = function () {
          var o = this;
          m(this._element).trigger(ve.SHOW),
            this._config.animation && this._element.classList.add("fade");
          var t = function () {
            o._element.classList.remove("showing"),
              o._element.classList.add("show"),
              m(o._element).trigger(ve.SHOWN),
              o._config.autohide && o.hide();
          };
          if (
            (this._element.classList.remove("hide"),
            this._element.classList.add("showing"),
            this._config.animation)
          ) {
            var e = b.getTransitionDurationFromElement(this._element);
            m(this._element).one(b.TRANSITION_END, t).emulateTransitionEnd(e);
          } else t();
        }),
        (e.hide = function (n) {
          var t = this;
          this._element.classList.contains("show") &&
            (m(this._element).trigger(ve.HIDE),
            n
              ? this._close()
              : (this._timeout = setTimeout(function () {
                  t._close();
                }, this._config.delay)));
        }),
        (e.dispose = function () {
          clearTimeout(this._timeout),
            (this._timeout = null),
            this._element.classList.contains("show") &&
              this._element.classList.remove("show"),
            m(this._element).off(ve.CLICK_DISMISS),
            m.removeData(this._element, "bs.toast"),
            (this._element = null),
            (this._config = null);
        }),
        (e._getConfig = function (e) {
          return (
            (e = s(
              {},
              ye,
              m(this._element).data(),
              "object" == typeof e && e ? e : {}
            )),
            b.typeCheckConfig("toast", e, this.constructor.DefaultType),
            e
          );
        }),
        (e._setListeners = function () {
          var e = this;
          m(this._element).on(
            ve.CLICK_DISMISS,
            '[data-dismiss="toast"]',
            function () {
              return e.hide(!0);
            }
          );
        }),
        (e._close = function () {
          var o = this,
            t = function () {
              o._element.classList.add("hide"),
                m(o._element).trigger(ve.HIDDEN);
            };
          if (
            (this._element.classList.remove("show"), this._config.animation)
          ) {
            var e = b.getTransitionDurationFromElement(this._element);
            m(this._element).one(b.TRANSITION_END, t).emulateTransitionEnd(e);
          } else t();
        }),
        (o._jQueryInterface = function (a) {
          return this.each(function () {
            var n = m(this),
              t = n.data("bs.toast");
            if (
              (t ||
                ((t = new o(this, "object" == typeof a && a)),
                n.data("bs.toast", t)),
              "string" == typeof a)
            ) {
              if ("undefined" == typeof t[a])
                throw new TypeError('No method named "' + a + '"');
              t[a](this);
            }
          });
        }),
        f(o, null, [
          {
            key: "VERSION",
            get: function () {
              return "4.3.1";
            },
          },
          {
            key: "DefaultType",
            get: function () {
              return Ee;
            },
          },
          {
            key: "Default",
            get: function () {
              return ye;
            },
          },
        ]),
        o
      );
    })();
  (m.fn.toast = Ce._jQueryInterface),
    (m.fn.toast.Constructor = Ce),
    (m.fn.toast.noConflict = function () {
      return (m.fn.toast = be), Ce._jQueryInterface;
    }),
    (function () {
      if ("undefined" == typeof m)
        throw new TypeError(
          "Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript."
        );
      var e = m.fn.jquery.split(" ")[0].split(".");
      if (
        (2 > e[0] && 9 > e[1]) ||
        (1 === e[0] && 9 === e[1] && 1 > e[2]) ||
        4 <= e[0]
      )
        throw new Error(
          "Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0"
        );
    })(),
    (e.Util = b),
    (e.Alert = l),
    (e.Button = _),
    (e.Carousel = C),
    (e.Collapse = A),
    (e.Dropdown = P),
    (e.Modal = U),
    (e.Popover = de),
    (e.Scrollspy = fe),
    (e.Tab = he),
    (e.Toast = Ce),
    (e.Tooltip = ae),
    Object.defineProperty(e, "__esModule", {
      value: !0,
    });
});

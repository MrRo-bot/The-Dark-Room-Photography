!(function (b) {
  "function" == typeof define && define.amd
    ? define(["jquery"], b)
    : b(
        "object" == typeof exports
          ? require("jquery")
          : window.jQuery || window.Zepto
      );
})(function (l) {
  var m,
    h,
    p,
    a,
    q,
    i,
    j = function () {},
    k = !!window.jQuery,
    s = l(window),
    t = function (b, a) {
      m.ev.on("mfp" + b + ".mfp", a);
    },
    u = function (a, b, c, d) {
      var e = document.createElement("div");
      return (
        (e.className = "mfp-" + a),
        c && (e.innerHTML = c),
        d ? b && b.appendChild(e) : ((e = l(e)), b && e.appendTo(b)),
        e
      );
    },
    v = function (a, b) {
      m.ev.triggerHandler("mfp" + a, b),
        m.st.callbacks &&
          ((a = a.charAt(0).toLowerCase() + a.slice(1)),
          m.st.callbacks[a] &&
            m.st.callbacks[a].apply(m, l.isArray(b) ? b : [b]));
    },
    w = function (a) {
      return (
        (a === i && m.currTemplate.closeBtn) ||
          ((m.currTemplate.closeBtn = l(
            m.st.closeMarkup.replace("%title%", m.st.tClose)
          )),
          (i = a)),
        m.currTemplate.closeBtn
      );
    },
    n = function () {
      l.magnificPopup.instance ||
        ((m = new j()), m.init(), (l.magnificPopup.instance = m));
    },
    o = function () {
      var c = document.createElement("p").style,
        a = ["ms", "O", "Moz", "Webkit"];
      if (void 0 !== c.transition) return !0;
      for (; a.length; ) if (a.pop() + "Transition" in c) return !0;
      return !1;
    };
  (j.prototype = {
    constructor: j,
    init: function () {
      var a = navigator.appVersion;
      (m.isLowIE = m.isIE8 = document.all && !document.addEventListener),
        (m.isAndroid = /android/gi.test(a)),
        (m.isIOS = /iphone|ipad|ipod/gi.test(a)),
        (m.supportsTransition = o()),
        (m.probablyMobile =
          m.isAndroid ||
          m.isIOS ||
          /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(
            navigator.userAgent
          )),
        (p = l(document)),
        (m.popupsCache = {});
    },
    open: function (a) {
      var b;
      if (!1 === a.isObj) {
        (m.items = a.items.toArray()), (m.index = 0);
        var c,
          d = a.items;
        for (b = 0; b < d.length; b++)
          if (((c = d[b]), c.parsed && (c = c.el[0]), c === a.el[0])) {
            m.index = b;
            break;
          }
      } else
        (m.items = l.isArray(a.items) ? a.items : [a.items]),
          (m.index = a.index || 0);
      if (m.isOpen) return void m.updateItemHTML();
      (m.types = []),
        (q = ""),
        (m.ev = a.mainEl && a.mainEl.length ? a.mainEl.eq(0) : p),
        a.key
          ? (m.popupsCache[a.key] || (m.popupsCache[a.key] = {}),
            (m.currTemplate = m.popupsCache[a.key]))
          : (m.currTemplate = {}),
        (m.st = l.extend(!0, {}, l.magnificPopup.defaults, a)),
        (m.fixedContentPos =
          "auto" === m.st.fixedContentPos
            ? !m.probablyMobile
            : m.st.fixedContentPos),
        m.st.modal &&
          ((m.st.closeOnContentClick = !1),
          (m.st.closeOnBgClick = !1),
          (m.st.showCloseBtn = !1),
          (m.st.enableEscapeKey = !1)),
        m.bgOverlay ||
          ((m.bgOverlay = u("bg").on("click.mfp", function () {
            m.close();
          })),
          (m.wrap = u("wrap")
            .attr("tabindex", -1)
            .on("click.mfp", function (b) {
              m._checkIfClose(b.target) && m.close();
            })),
          (m.container = u("container", m.wrap))),
        (m.contentContainer = u("content")),
        m.st.preloader &&
          (m.preloader = u("preloader", m.container, m.st.tLoading));
      var f = l.magnificPopup.modules;
      for (b = 0; b < f.length; b++) {
        var h = f[b];
        (h = h.charAt(0).toUpperCase() + h.slice(1)), m["init" + h].call(m);
      }
      v("BeforeOpen"),
        m.st.showCloseBtn &&
          (m.st.closeBtnInside
            ? (t("MarkupParse", function (e, a, b, c) {
                b.close_replaceWith = w(c.type);
              }),
              (q += " mfp-close-btn-in"))
            : m.wrap.append(w())),
        m.st.alignTop && (q += " mfp-align-top"),
        m.fixedContentPos
          ? m.wrap.css({
              overflow: m.st.overflowY,
              overflowX: "hidden",
              overflowY: m.st.overflowY,
            })
          : m.wrap.css({
              top: s.scrollTop(),
              position: "absolute",
            }),
        (!1 !== m.st.fixedBgPos &&
          ("auto" !== m.st.fixedBgPos || m.fixedContentPos)) ||
          m.bgOverlay.css({
            height: p.height(),
            position: "absolute",
          }),
        m.st.enableEscapeKey &&
          p.on("keyup.mfp", function (b) {
            27 === b.keyCode && m.close();
          }),
        s.on("resize.mfp", function () {
          m.updateSize();
        }),
        m.st.closeOnContentClick || (q += " mfp-auto-cursor"),
        q && m.wrap.addClass(q);
      var i = (m.wH = s.height()),
        k = {};
      if (m.fixedContentPos && m._hasScrollBar(i)) {
        var n = m._getScrollbarSize();
        n && (k.marginRight = n);
      }
      m.fixedContentPos &&
        (m.isIE7
          ? l("body, html").css("overflow", "hidden")
          : (k.overflow = "hidden"));
      var o = m.st.mainClass;
      return (
        m.isIE7 && (o += " mfp-ie7"),
        o && m._addClassToMFP(o),
        m.updateItemHTML(),
        v("BuildControls"),
        l("html").css(k),
        m.bgOverlay.add(m.wrap).prependTo(m.st.prependTo || l(document.body)),
        (m._lastFocusedEl = document.activeElement),
        setTimeout(function () {
          m.content
            ? (m._addClassToMFP("mfp-ready"), m._setFocus())
            : m.bgOverlay.addClass("mfp-ready"),
            p.on("focusin.mfp", m._onFocusIn);
        }, 16),
        (m.isOpen = !0),
        m.updateSize(i),
        v("Open"),
        a
      );
    },
    close: function () {
      m.isOpen &&
        (v("BeforeClose"),
        (m.isOpen = !1),
        m.st.removalDelay && !m.isLowIE && m.supportsTransition
          ? (m._addClassToMFP("mfp-removing"),
            setTimeout(function () {
              m._close();
            }, m.st.removalDelay))
          : m._close());
    },
    _close: function () {
      v("Close");
      var a = "mfp-removing mfp-ready ";
      if (
        (m.bgOverlay.detach(),
        m.wrap.detach(),
        m.container.empty(),
        m.st.mainClass && (a += m.st.mainClass + " "),
        m._removeClassFromMFP(a),
        m.fixedContentPos)
      ) {
        var b = {
          marginRight: "",
        };
        m.isIE7 ? l("body, html").css("overflow", "") : (b.overflow = ""),
          l("html").css(b);
      }
      p.off("keyup.mfp focusin.mfp"),
        m.ev.off(".mfp"),
        m.wrap.attr("class", "mfp-wrap").removeAttr("style"),
        m.bgOverlay.attr("class", "mfp-bg"),
        m.container.attr("class", "mfp-container"),
        !m.st.showCloseBtn ||
          (m.st.closeBtnInside && !0 !== m.currTemplate[m.currItem.type]) ||
          (m.currTemplate.closeBtn && m.currTemplate.closeBtn.detach()),
        m.st.autoFocusLast && m._lastFocusedEl && l(m._lastFocusedEl).focus(),
        (m.currItem = null),
        (m.content = null),
        (m.currTemplate = null),
        (m.prevHeight = 0),
        v("AfterClose");
    },
    updateSize: function (b) {
      if (m.isIOS) {
        var a = document.documentElement.clientWidth / window.innerWidth,
          c = window.innerHeight * a;
        m.wrap.css("height", c), (m.wH = c);
      } else m.wH = b || s.height();
      m.fixedContentPos || m.wrap.css("height", m.wH), v("Resize");
    },
    updateItemHTML: function () {
      var b = m.items[m.index];
      m.contentContainer.detach(),
        m.content && m.content.detach(),
        b.parsed || (b = m.parseEl(m.index));
      var e = b.type;
      if (
        (v("BeforeChange", [m.currItem ? m.currItem.type : "", e]),
        (m.currItem = b),
        !m.currTemplate[e])
      ) {
        var d = !!m.st[e] && m.st[e].markup;
        v("FirstMarkupParse", d), (m.currTemplate[e] = !d || l(d));
      }
      a && a !== b.type && m.container.removeClass("mfp-" + a + "-holder");
      var f = m["get" + e.charAt(0).toUpperCase() + e.slice(1)](
        b,
        m.currTemplate[e]
      );
      m.appendContent(f, e),
        (b.preloaded = !0),
        v("Change", b),
        (a = b.type),
        m.container.prepend(m.contentContainer),
        v("AfterChange");
    },
    appendContent: function (b, a) {
      (m.content = b),
        b
          ? m.st.showCloseBtn && m.st.closeBtnInside && !0 === m.currTemplate[a]
            ? m.content.find(".mfp-close").length || m.content.append(w())
            : (m.content = b)
          : (m.content = ""),
        v("BeforeAppend"),
        m.container.addClass("mfp-" + a + "-holder"),
        m.contentContainer.append(m.content);
    },
    parseEl: function (a) {
      var b,
        c = m.items[a];
      if (
        (c.tagName
          ? (c = {
              el: l(c),
            })
          : ((b = c.type),
            (c = {
              data: c,
              src: c.src,
            })),
        c.el)
      ) {
        for (var h = m.types, f = 0; f < h.length; f++)
          if (c.el.hasClass("mfp-" + h[f])) {
            b = h[f];
            break;
          }
        (c.src = c.el.attr("data-mfp-src")),
          c.src || (c.src = c.el.attr("href"));
      }
      return (
        (c.type = b || m.st.type || "inline"),
        (c.index = a),
        (c.parsed = !0),
        (m.items[a] = c),
        v("ElementParse", c),
        m.items[a]
      );
    },
    addGroup: function (b, a) {
      var e = function (c) {
        (c.mfpEl = this), m._openClick(c, b, a);
      };
      a || (a = {});
      (a.mainEl = b),
        a.items
          ? ((a.isObj = !0),
            b.off("click.magnificPopup").on("click.magnificPopup", e))
          : ((a.isObj = !1),
            a.delegate
              ? b
                  .off("click.magnificPopup")
                  .on("click.magnificPopup", a.delegate, e)
              : ((a.items = b),
                b.off("click.magnificPopup").on("click.magnificPopup", e)));
    },
    _openClick: function (a, b, c) {
      var d =
        void 0 === c.midClick ? l.magnificPopup.defaults.midClick : c.midClick;
      if (
        d ||
        !(2 === a.which || a.ctrlKey || a.metaKey || a.altKey || a.shiftKey)
      ) {
        var e =
          void 0 === c.disableOn
            ? l.magnificPopup.defaults.disableOn
            : c.disableOn;
        if (e)
          if (l.isFunction(e)) {
            if (!e.call(m)) return !0;
          } else if (s.width() < e) return !0;
        a.type && (a.preventDefault(), m.isOpen && a.stopPropagation()),
          (c.el = l(a.mfpEl)),
          c.delegate && (c.items = b.find(c.delegate)),
          m.open(c);
      }
    },
    updateStatus: function (b, c) {
      if (m.preloader) {
        h !== b && m.container.removeClass("mfp-s-" + h),
          c || "loading" !== b || (c = m.st.tLoading);
        var f = {
          status: b,
          text: c,
        };
        v("UpdateStatus", f),
          (b = f.status),
          (c = f.text),
          m.preloader.html(c),
          m.preloader.find("a").on("click", function (b) {
            b.stopImmediatePropagation();
          }),
          m.container.addClass("mfp-s-" + b),
          (h = b);
      }
    },
    _checkIfClose: function (a) {
      if (!l(a).hasClass("mfp-prevent-close")) {
        var b = m.st.closeOnContentClick,
          c = m.st.closeOnBgClick;
        if (b && c) return !0;
        if (
          !m.content ||
          l(a).hasClass("mfp-close") ||
          (m.preloader && a === m.preloader[0])
        )
          return !0;
        if (a === m.content[0] || l.contains(m.content[0], a)) {
          if (b) return !0;
        } else if (c && l.contains(document, a)) return !0;
        return !1;
      }
    },
    _addClassToMFP: function (b) {
      m.bgOverlay.addClass(b), m.wrap.addClass(b);
    },
    _removeClassFromMFP: function (b) {
      this.bgOverlay.removeClass(b), m.wrap.removeClass(b);
    },
    _hasScrollBar: function (b) {
      return (
        (m.isIE7 ? p.height() : document.body.scrollHeight) > (b || s.height())
      );
    },
    _setFocus: function () {
      (m.st.focus ? m.content.find(m.st.focus).eq(0) : m.wrap).focus();
    },
    _onFocusIn: function (a) {
      return a.target === m.wrap[0] || l.contains(m.wrap[0], a.target)
        ? void 0
        : (m._setFocus(), !1);
    },
    _parseMarkup: function (a, b, f) {
      var h;
      f.data && (b = l.extend(f.data, b)),
        v("MarkupParse", [a, b, f]),
        l.each(b, function (b, c) {
          if (void 0 === c || !1 === c) return !0;
          if (((h = b.split("_")), 1 < h.length)) {
            var d = a.find(".mfp-" + h[0]);
            if (0 < d.length) {
              var e = h[1];
              "replaceWith" === e
                ? d[0] !== c[0] && d.replaceWith(c)
                : "img" === e
                ? d.is("img")
                  ? d.attr("src", c)
                  : d.replaceWith(
                      l("<img>").attr("src", c).attr("class", d.attr("class"))
                    )
                : d.attr(h[1], c);
            }
          } else a.find(".mfp-" + b).html(c);
        });
    },
    _getScrollbarSize: function () {
      if (void 0 === m.scrollbarSize) {
        var b = document.createElement("div");
        (b.style.cssText =
          "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;"),
          document.body.appendChild(b),
          (m.scrollbarSize = b.offsetWidth - b.clientWidth),
          document.body.removeChild(b);
      }
      return m.scrollbarSize;
    },
  }),
    (l.magnificPopup = {
      instance: null,
      proto: j.prototype,
      modules: [],
      open: function (a, d) {
        return (
          n(),
          (a = a ? l.extend(!0, {}, a) : {}),
          (a.isObj = !0),
          (a.index = d || 0),
          this.instance.open(a)
        );
      },
      close: function () {
        return l.magnificPopup.instance && l.magnificPopup.instance.close();
      },
      registerModule: function (a, b) {
        b.options && (l.magnificPopup.defaults[a] = b.options),
          l.extend(this.proto, b.proto),
          this.modules.push(a);
      },
      defaults: {
        disableOn: 0,
        key: null,
        midClick: !1,
        mainClass: "",
        preloader: !0,
        focus: "",
        closeOnContentClick: !1,
        closeOnBgClick: !0,
        closeBtnInside: !0,
        showCloseBtn: !0,
        enableEscapeKey: !0,
        modal: !1,
        alignTop: !1,
        removalDelay: 0,
        prependTo: null,
        fixedContentPos: "auto",
        fixedBgPos: "auto",
        overflowY: "auto",
        closeMarkup:
          '<button title="%title%" type="button" class="mfp-close">&#215;</button>',
        tClose: "Close (Esc)",
        tLoading: "Loading...",
        autoFocusLast: !0,
      },
    }),
    (l.fn.magnificPopup = function (a) {
      n();
      var b = l(this);
      if (!("string" == typeof a))
        (a = l.extend(!0, {}, a)),
          k ? b.data("magnificPopup", a) : (b[0].magnificPopup = a),
          m.addGroup(b, a);
      else if ("open" === a) {
        var d,
          h = k ? b.data("magnificPopup") : b[0].magnificPopup,
          f = parseInt(arguments[1], 10) || 0;
        h.items
          ? (d = h.items[f])
          : ((d = b), h.delegate && (d = d.find(h.delegate)), (d = d.eq(f))),
          m._openClick(
            {
              mfpEl: d,
            },
            b,
            h
          );
      } else
        m.isOpen && m[a].apply(m, Array.prototype.slice.call(arguments, 1));
      return b;
    });
  var r,
    x,
    y,
    z = function () {
      y && (x.after(y.addClass(r)).detach(), (y = null));
    };
  l.magnificPopup.registerModule("inline", {
    options: {
      hiddenClass: "hide",
      markup: "",
      tNotFound: "Content not found",
    },
    proto: {
      initInline: function () {
        m.types.push("inline"),
          t("Close.inline", function () {
            z();
          });
      },
      getInline: function (a, b) {
        if ((z(), a.src)) {
          var c = m.st.inline,
            d = l(a.src);
          if (d.length) {
            var e = d[0].parentNode;
            e &&
              e.tagName &&
              (x || ((r = c.hiddenClass), (x = u(r)), (r = "mfp-" + r)),
              (y = d.after(x).detach().removeClass(r))),
              m.updateStatus("ready");
          } else m.updateStatus("error", c.tNotFound), (d = l("<div>"));
          return (a.inlineElement = d), d;
        }
        return m.updateStatus("ready"), m._parseMarkup(b, {}, a), b;
      },
    },
  });
  var A,
    B = function () {
      A && l(document.body).removeClass(A);
    },
    F = function () {
      B(), m.req && m.req.abort();
    };
  l.magnificPopup.registerModule("ajax", {
    options: {
      settings: null,
      cursor: "mfp-ajax-cur",
      tError: '<a href="%url%">The content</a> could not be loaded.',
    },
    proto: {
      initAjax: function () {
        m.types.push("ajax"),
          (A = m.st.ajax.cursor),
          t("Close.ajax", F),
          t("BeforeChange.ajax", F);
      },
      getAjax: function (a) {
        A && l(document.body).addClass(A), m.updateStatus("loading");
        var b = l.extend(
          {
            url: a.src,
            success: function (b, c, d) {
              var e = {
                data: b,
                xhr: d,
              };
              v("ParseAjax", e),
                m.appendContent(l(e.data), "ajax"),
                (a.finished = !0),
                B(),
                m._setFocus(),
                setTimeout(function () {
                  m.wrap.addClass("mfp-ready");
                }, 16),
                m.updateStatus("ready"),
                v("AjaxContentAdded");
            },
            error: function () {
              B(),
                (a.finished = a.loadError = !0),
                m.updateStatus(
                  "error",
                  m.st.ajax.tError.replace("%url%", a.src)
                );
            },
          },
          m.st.ajax.settings
        );
        return (m.req = l.ajax(b)), "";
      },
    },
  });
  var G,
    I = function (a) {
      if (a.data && void 0 !== a.data.title) return a.data.title;
      var b = m.st.image.titleSrc;
      if (b) {
        if (l.isFunction(b)) return b.call(m, a);
        if (a.el) return a.el.attr(b) || "";
      }
      return "";
    };
  l.magnificPopup.registerModule("image", {
    options: {
      markup:
        '<div class="mfp-figure"><div class="mfp-close"></div><figure><div class="mfp-img"></div><figcaption><div class="mfp-bottom-bar"><div class="mfp-title"></div><div class="mfp-counter"></div></div></figcaption></figure></div>',
      cursor: "mfp-zoom-out-cur",
      titleSrc: "title",
      verticalFit: !0,
      tError: '<a href="%url%">The image</a> could not be loaded.',
    },
    proto: {
      initImage: function () {
        var a = m.st.image;
        m.types.push("image"),
          t("Open.image", function () {
            "image" === m.currItem.type &&
              a.cursor &&
              l(document.body).addClass(a.cursor);
          }),
          t("Close.image", function () {
            a.cursor && l(document.body).removeClass(a.cursor),
              s.off("resize.mfp");
          }),
          t("Resize.image", m.resizeImage),
          m.isLowIE && t("AfterChange", m.resizeImage);
      },
      resizeImage: function () {
        var b = m.currItem;
        if (b && b.img && m.st.image.verticalFit) {
          var a = 0;
          m.isLowIE &&
            (a =
              parseInt(b.img.css("padding-top"), 10) +
              parseInt(b.img.css("padding-bottom"), 10)),
            b.img.css("max-height", m.wH - a);
        }
      },
      _onImageHasSize: function (b) {
        b.img &&
          ((b.hasSize = !0),
          G && clearInterval(G),
          (b.isCheckingImgSize = !1),
          v("ImageHasSize", b),
          b.imgHidden &&
            (m.content && m.content.removeClass("mfp-loading"),
            (b.imgHidden = !1)));
      },
      findImageSize: function (b) {
        var a = 0,
          f = b.img[0],
          d = function (c) {
            G && clearInterval(G),
              (G = setInterval(function () {
                return 0 < f.naturalWidth
                  ? void m._onImageHasSize(b)
                  : (200 < a && clearInterval(G),
                    a++,
                    void (3 == a
                      ? d(10)
                      : 40 === a
                      ? d(50)
                      : 100 == a && d(500)));
              }, c));
          };
        d(1);
      },
      getImage: function (a, b) {
        var c = 0,
          d = function () {
            a &&
              (a.img[0].complete
                ? (a.img.off(".mfploader"),
                  a === m.currItem &&
                    (m._onImageHasSize(a), m.updateStatus("ready")),
                  (a.hasSize = !0),
                  (a.loaded = !0),
                  v("ImageLoadComplete"))
                : (c++, 200 > c ? setTimeout(d, 100) : f()));
          },
          f = function () {
            a &&
              (a.img.off(".mfploader"),
              a === m.currItem &&
                (m._onImageHasSize(a),
                m.updateStatus("error", g.tError.replace("%url%", a.src))),
              (a.hasSize = !0),
              (a.loaded = !0),
              (a.loadError = !0));
          },
          g = m.st.image,
          h = b.find(".mfp-img");
        if (h.length) {
          var i = document.createElement("img");
          (i.className = "mfp-img"),
            a.el &&
              a.el.find("img").length &&
              (i.alt = a.el.find("img").attr("alt")),
            (a.img = l(i).on("load.mfploader", d).on("error.mfploader", f)),
            (i.src = a.src),
            h.is("img") && (a.img = a.img.clone()),
            (i = a.img[0]),
            0 < i.naturalWidth ? (a.hasSize = !0) : i.width || (a.hasSize = !1);
        }
        return (
          m._parseMarkup(
            b,
            {
              title: I(a),
              img_replaceWith: a.img,
            },
            a
          ),
          m.resizeImage(),
          a.hasSize
            ? (G && clearInterval(G),
              a.loadError
                ? (b.addClass("mfp-loading"),
                  m.updateStatus("error", g.tError.replace("%url%", a.src)))
                : (b.removeClass("mfp-loading"), m.updateStatus("ready")),
              b)
            : (m.updateStatus("loading"),
              (a.loading = !0),
              a.hasSize ||
                ((a.imgHidden = !0),
                b.addClass("mfp-loading"),
                m.findImageSize(a)),
              b)
        );
      },
    },
  });
  var J,
    K = function () {
      return (
        void 0 === J &&
          (J = void 0 !== document.createElement("p").style.MozTransform),
        J
      );
    };
  l.magnificPopup.registerModule("zoom", {
    options: {
      enabled: !1,
      easing: "ease-in-out",
      duration: 300,
      opener: function (b) {
        return b.is("img") ? b : b.find("img");
      },
    },
    proto: {
      initZoom: function () {
        var b,
          h = m.st.zoom;
        if (h.enabled && m.supportsTransition) {
          var c,
            d,
            i = h.duration,
            g = function (c) {
              var a = c
                  .clone()
                  .removeAttr("style")
                  .removeAttr("class")
                  .addClass("mfp-animated-image"),
                b = "all " + h.duration / 1e3 + "s " + h.easing,
                d = {
                  position: "fixed",
                  zIndex: 9999,
                  left: 0,
                  top: 0,
                  "-webkit-backface-visibility": "hidden",
                };
              return (
                (d["-webkit-transition"] = d["-moz-transition"] = d[
                  "-o-transition"
                ] = d.transition = b),
                a.css(d),
                a
              );
            },
            j = function () {
              m.content.css("visibility", "visible");
            };
          t("BuildControls.zoom", function () {
            if (m._allowZoom()) {
              if (
                (clearTimeout(c),
                m.content.css("visibility", "hidden"),
                (b = m._getItemToZoom()),
                !b)
              )
                return void j();
              (d = g(b)),
                d.css(m._getOffset()),
                m.wrap.append(d),
                (c = setTimeout(function () {
                  d.css(m._getOffset(!0)),
                    (c = setTimeout(function () {
                      j(),
                        setTimeout(function () {
                          d.remove(), (b = d = null), v("ZoomAnimationEnded");
                        }, 16);
                    }, i));
                }, 16));
            }
          }),
            t("BeforeClose.zoom", function () {
              if (m._allowZoom()) {
                if ((clearTimeout(c), (m.st.removalDelay = i), !b)) {
                  if (((b = m._getItemToZoom()), !b)) return;
                  d = g(b);
                }
                d.css(m._getOffset(!0)),
                  m.wrap.append(d),
                  m.content.css("visibility", "hidden"),
                  setTimeout(function () {
                    d.css(m._getOffset());
                  }, 16);
              }
            }),
            t("Close.zoom", function () {
              m._allowZoom() && (j(), d && d.remove(), (b = null));
            });
        }
      },
      _allowZoom: function () {
        return "image" === m.currItem.type;
      },
      _getItemToZoom: function () {
        return !!m.currItem.hasSize && m.currItem.img;
      },
      _getOffset: function (a) {
        var b = a
          ? m.currItem.img
          : m.st.zoom.opener(m.currItem.el || m.currItem);
        var c = b.offset(),
          d = parseInt(b.css("padding-top"), 10),
          e = parseInt(b.css("padding-bottom"), 10);
        c.top -= l(window).scrollTop() - d;
        var f = {
          width: b.width(),
          height: (k ? b.innerHeight() : b[0].offsetHeight) - e - d,
        };
        return (
          K()
            ? (f["-moz-transform"] = f.transform =
                "translate(" + c.left + "px," + c.top + "px)")
            : ((f.left = c.left), (f.top = c.top)),
          f
        );
      },
    },
  });
  var M = function (b) {
    if (m.currTemplate.iframe) {
      var a = m.currTemplate.iframe.find("iframe");
      a.length &&
        (b || (a[0].src = "//about:blank"),
        m.isIE8 && a.css("display", b ? "block" : "none"));
    }
  };
  l.magnificPopup.registerModule("iframe", {
    options: {
      markup:
        '<div class="mfp-iframe-scaler"><div class="mfp-close"></div><iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe></div>',
      srcAction: "iframe_src",
      patterns: {
        youtube: {
          index: "youtube.com",
          id: "v=",
          src: "//www.youtube.com/embed/%id%?autoplay=1",
        },
        vimeo: {
          index: "vimeo.com/",
          id: "/",
          src: "//player.vimeo.com/video/%id%?autoplay=1",
        },
        gmaps: {
          index: "//maps.google.",
          src: "%id%&output=embed",
        },
      },
    },
    proto: {
      initIframe: function () {
        m.types.push("iframe"),
          t("BeforeChange", function (d, a, b) {
            a !== b && (a === "iframe" ? M() : b === "iframe" && M(!0));
          }),
          t("Close.iframe", function () {
            M();
          });
      },
      getIframe: function (a, b) {
        var c = a.src,
          d = m.st.iframe;
        l.each(d.patterns, function () {
          return -1 < c.indexOf(this.index)
            ? (this.id &&
                (c =
                  "string" == typeof this.id
                    ? c.substr(
                        c.lastIndexOf(this.id) + this.id.length,
                        c.length
                      )
                    : this.id.call(this, c)),
              (c = this.src.replace("%id%", c)),
              !1)
            : void 0;
        });
        var f = {};
        return (
          d.srcAction && (f[d.srcAction] = c),
          m._parseMarkup(b, f, a),
          m.updateStatus("ready"),
          b
        );
      },
    },
  });
  var O = function (b) {
      var a = m.items.length;
      return b > a - 1 ? b - a : 0 > b ? a + b : b;
    },
    P = function (d, a, b) {
      return d.replace(/%curr%/gi, a + 1).replace(/%total%/gi, b);
    };
  l.magnificPopup.registerModule("gallery", {
    options: {
      enabled: !1,
      arrowMarkup:
        '<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',
      preload: [0, 2],
      navigateByImgClick: !0,
      arrows: !0,
      tPrev: "Previous (Left arrow key)",
      tNext: "Next (Right arrow key)",
      tCounter: "%curr% of %total%",
    },
    proto: {
      initGallery: function () {
        var b = m.st.gallery;
        return (
          (m.direction = !0),
          !!(b && b.enabled) &&
            ((q += " mfp-gallery"),
            t("Open.mfp-gallery", function () {
              b.navigateByImgClick &&
                m.wrap.on("click.mfp-gallery", ".mfp-img", function () {
                  return 1 < m.items.length ? (m.next(), !1) : void 0;
                }),
                p.on("keydown.mfp-gallery", function (b) {
                  37 === b.keyCode ? m.prev() : 39 === b.keyCode && m.next();
                });
            }),
            t("UpdateStatus.mfp-gallery", function (b, a) {
              a.text && (a.text = P(a.text, m.currItem.index, m.items.length));
            }),
            t("MarkupParse.mfp-gallery", function (c, a, d, e) {
              var f = m.items.length;
              d.counter = 1 < f ? P(b.tCounter, e.index, f) : "";
            }),
            t("BuildControls.mfp-gallery", function () {
              if (1 < m.items.length && b.arrows && !m.arrowLeft) {
                var a = b.arrowMarkup,
                  c = (m.arrowLeft = l(
                    a.replace(/%title%/gi, b.tPrev).replace(/%dir%/gi, "left")
                  ).addClass("mfp-prevent-close")),
                  d = (m.arrowRight = l(
                    a.replace(/%title%/gi, b.tNext).replace(/%dir%/gi, "right")
                  ).addClass("mfp-prevent-close"));
                c.click(function () {
                  m.prev();
                }),
                  d.click(function () {
                    m.next();
                  }),
                  m.container.append(c.add(d));
              }
            }),
            t("Change.mfp-gallery", function () {
              m._preloadTimeout && clearTimeout(m._preloadTimeout),
                (m._preloadTimeout = setTimeout(function () {
                  m.preloadNearbyImages(), (m._preloadTimeout = null);
                }, 16));
            }),
            void t("Close.mfp-gallery", function () {
              p.off(".mfp-gallery"),
                m.wrap.off("click.mfp-gallery"),
                (m.arrowRight = m.arrowLeft = null);
            }))
        );
      },
      next: function () {
        (m.direction = !0), (m.index = O(m.index + 1)), m.updateItemHTML();
      },
      prev: function () {
        (m.direction = !1), (m.index = O(m.index - 1)), m.updateItemHTML();
      },
      goTo: function (b) {
        (m.direction = b >= m.index), (m.index = b), m.updateItemHTML();
      },
      preloadNearbyImages: function () {
        var b,
          f = m.st.gallery.preload,
          c = Math.min(f[0], m.items.length),
          d = Math.min(f[1], m.items.length);
        for (b = 1; b <= (m.direction ? d : c); b++)
          m._preloadItem(m.index + b);
        for (b = 1; b <= (m.direction ? c : d); b++)
          m._preloadItem(m.index - b);
      },
      _preloadItem: function (a) {
        if (((a = O(a)), !m.items[a].preloaded)) {
          var b = m.items[a];
          b.parsed || (b = m.parseEl(a)),
            v("LazyLoad", b),
            "image" === b.type &&
              (b.img = l('<img class="mfp-img" />')
                .on("load.mfploader", function () {
                  b.hasSize = !0;
                })
                .on("error.mfploader", function () {
                  (b.hasSize = !0), (b.loadError = !0), v("LazyLoadError", b);
                })
                .attr("src", b.src)),
            (b.preloaded = !0);
        }
      },
    },
  });
  l.magnificPopup.registerModule("retina", {
    options: {
      replaceSrc: function (b) {
        return b.src.replace(/\.\w+$/, function (b) {
          return "@2x" + b;
        });
      },
      ratio: 1,
    },
    proto: {
      initRetina: function () {
        if (1 < window.devicePixelRatio) {
          var e = m.st.retina,
            f = e.ratio;
          (f = isNaN(f) ? f() : f),
            1 < f &&
              (t("ImageHasSize.retina", function (c, a) {
                a.img.css({
                  "max-width": a.img[0].naturalWidth / f,
                  width: "100%",
                });
              }),
              t("ElementParse.retina", function (a, b) {
                b.src = e.replaceSrc(b, f);
              }));
        }
      },
    },
  }),
    n();
});
